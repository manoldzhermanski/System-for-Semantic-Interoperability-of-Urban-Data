{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/lodash/isObject.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///../node_modules/lodash/identity.js","webpack:///../node_modules/lodash/isFunction.js","webpack:///../node_modules/lodash/_Symbol.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/lodash/eq.js","webpack:///../node_modules/lodash/isArrayLike.js","webpack:///../node_modules/lodash/isLength.js","webpack:///../node_modules/lodash/_isIndex.js","webpack:///../node_modules/lodash/isBuffer.js","webpack:///../node_modules/lodash/_nodeUtil.js","webpack:///../node_modules/lodash/defaults.js","webpack:///../node_modules/lodash/_baseRest.js","webpack:///../node_modules/lodash/_overRest.js","webpack:///../node_modules/lodash/_apply.js","webpack:///../node_modules/lodash/_setToString.js","webpack:///../node_modules/lodash/_baseSetToString.js","webpack:///../node_modules/lodash/constant.js","webpack:///../node_modules/lodash/_defineProperty.js","webpack:///../node_modules/lodash/_getNative.js","webpack:///../node_modules/lodash/_baseIsNative.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/_isMasked.js","webpack:///../node_modules/lodash/_coreJsData.js","webpack:///../node_modules/lodash/_toSource.js","webpack:///../node_modules/lodash/_getValue.js","webpack:///../node_modules/lodash/_shortOut.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/keysIn.js","webpack:///../node_modules/lodash/_arrayLikeKeys.js","webpack:///../node_modules/lodash/_baseTimes.js","webpack:///../node_modules/lodash/isArguments.js","webpack:///../node_modules/lodash/_baseIsArguments.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/stubFalse.js","webpack:///../node_modules/lodash/isTypedArray.js","webpack:///../node_modules/lodash/_baseIsTypedArray.js","webpack:///../node_modules/lodash/_baseUnary.js","webpack:///../node_modules/lodash/_baseKeysIn.js","webpack:///../node_modules/lodash/_isPrototype.js","webpack:///../node_modules/lodash/_nativeKeysIn.js","webpack:///external amd \"react\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"lodash\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///./types.ts","webpack:///./utils.ts","webpack:///./units.ts","webpack:///./ngsildTypes.ts","webpack:///./GeoHandler.ts","webpack:///./NodeGraphHandler.ts","webpack:///./datasource.ts","webpack:///./ConfigEditor.tsx","webpack:///./components/GraphQueryEditor.tsx","webpack:///./AggregationHelper.ts","webpack:///./components/TimeseriesAggregationEditor.tsx","webpack:///./components/GeoParamsEditor.tsx","webpack:///./QueryEditor.tsx","webpack:///./module.ts"],"sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__45__;","module.exports = __WEBPACK_EXTERNAL_MODULE__46__;","module.exports = __WEBPACK_EXTERNAL_MODULE__47__;","module.exports = __WEBPACK_EXTERNAL_MODULE__49__;","module.exports = __WEBPACK_EXTERNAL_MODULE__50__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { DataQuery, DataSourceJsonData } from '@grafana/data';\r\nimport { TemporalPropertyKey } from 'ngsildTypes';\r\n// TODO cf https://github.com/easy-global-market/grafana-ngsild-plugin/blob/master/src/types.ts\r\n\r\nexport enum NgsildQueryType {\r\n  ENTITY = \"entity\",\r\n  TEMPORAL = \"temporal\",\r\n  GEO = \"geo\",\r\n  TYPES = \"type\",\r\n  VERSION = \"version\",\r\n  ATTRIBUTES = \"attributes\",\r\n  NODE_GRAPH = \"nodegraph\"\r\n}\r\n\r\nexport const queryTypeForValue = (type?: string): NgsildQueryType|undefined => {\r\n  if (!type)\r\n    {return undefined;}\r\n  switch (type.toLowerCase()) {\r\n  case \"entity\":\r\n  case \"entities\":\r\n    return NgsildQueryType.ENTITY;\r\n  case \"temporal\":\r\n  case \"timseries\":\r\n    return NgsildQueryType.TEMPORAL;\r\n  case \"geo\":\r\n    return NgsildQueryType.GEO;\r\n  case \"type\":\r\n  case \"types\":\r\n    return NgsildQueryType.TYPES;\r\n  case \"version\":\r\n    return NgsildQueryType.VERSION;\r\n  case \"attribute\":\r\n  case \"attributes\":\r\n    return NgsildQueryType.ATTRIBUTES;\r\n  case \"graph\":\r\n  case \"nodegraph\":\r\n  case \"node_graph\":\r\n    return NgsildQueryType.NODE_GRAPH;\r\n  default:\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport enum TimeseriesAggregationMethod {\r\n  TOTAL_COUNT = \"totalCount\",\r\n  DISTINCT_COUNT = \"distinctCount\",\r\n  // TODO what about distinctValue?\r\n  SUM = \"sum\",\r\n  AVERAGE = \"avg\",\r\n  MIN = \"min\",\r\n  MAX = \"max\",\r\n  STANDARD_DEVIATION = \"stddev\",\r\n  SUM_SQUARE = \"sumsq\"\r\n}\r\n\r\nexport const aggregationMethodForValue = (method?: string): TimeseriesAggregationMethod|undefined => {\r\n  if (!method)\r\n    {return undefined;}\r\n  switch (method.toLowerCase()) {\r\n  case \"totalcount\":\r\n  case \"total_count\":\r\n    return TimeseriesAggregationMethod.TOTAL_COUNT;\r\n  case \"distinctcount\":\r\n  case \"distinct_count\":\r\n    return TimeseriesAggregationMethod.DISTINCT_COUNT;\r\n  case \"sum\":\r\n    return TimeseriesAggregationMethod.SUM;\r\n  case \"avg\":\r\n  case \"average\":\r\n    return TimeseriesAggregationMethod.AVERAGE;\r\n  case \"min\":\r\n    return TimeseriesAggregationMethod.MIN;\r\n  case \"max\":\r\n    return TimeseriesAggregationMethod.MAX;\r\n  case \"stddev\":\r\n  case \"standard_deviation\":\r\n    return TimeseriesAggregationMethod.STANDARD_DEVIATION;\r\n  case \"sumsq\":\r\n  case \"sumsquare\":\r\n  case \"sum_square\":\r\n    return TimeseriesAggregationMethod.SUM_SQUARE;\r\n  default:\r\n    return undefined;\r\n  }\r\n\r\n}\r\n\r\nexport enum GeorelProperty {\r\n  NONE = \"none\",\r\n  NEAR = \"near\",\r\n  EQUALS = \"equals\",\r\n  DISJOINT = \"disjoint\",\r\n  INTERSECTS = \"intersects\",\r\n  WITHIN = \"within\",\r\n  CONTAINS = \"contains\",\r\n  OVERLAPS = \"overlaps\"\r\n}\r\n\r\nexport const georelFromValue = (georel?: string): GeorelProperty => {\r\n  if (!georel)\r\n    {return GeorelProperty.NONE;}\r\n  georel = georel.toLowerCase();\r\n  if (georel === \"near\" || georel.startsWith(\"near;\")) // in this case it should have further qualifiers\r\n    {return GeorelProperty.NEAR;} \r\n  switch (georel.toLowerCase()) {\r\n  case \"equals\":\r\n    return GeorelProperty.EQUALS;\r\n  case \"disjoint\":\r\n    return GeorelProperty.DISJOINT;\r\n  case \"intersects\":\r\n    return GeorelProperty.INTERSECTS;\r\n  case \"within\":\r\n    return GeorelProperty.WITHIN;\r\n  case \"contains\":\r\n    return GeorelProperty.CONTAINS;\r\n  case \"overlaps\":\r\n    return GeorelProperty.OVERLAPS;\r\n  default:\r\n    return GeorelProperty.NONE;\r\n  }\r\n}\r\n\r\nexport enum NamePattern {\r\n  ENTITY_PLUS_ATTRIBUTE = \"entity_plus_attribute\",\r\n  ENTITY_NAME = \"entity_name\",\r\n  ATTRIBUTE = \"attribute\"\r\n}\r\n\r\nexport const namePatternFromValue = (namePattern?: string): NamePattern => {\r\n  switch(namePattern?.toLowerCase()) {\r\n  case \"entity_name\":\r\n    return NamePattern.ENTITY_NAME;\r\n  case \"attribute\":\r\n    return NamePattern.ATTRIBUTE;\r\n  default:\r\n    return NamePattern.ENTITY_PLUS_ATTRIBUTE;\r\n  }\r\n}\r\n\r\n// TODO support Array<string> for each of the options?\r\nexport interface NgsildQuery extends DataQuery {\r\n  entityId?: string;\r\n  attributes?: string[];\r\n  entityType?: string; // note: multiple types are supported in most operations as a comma-separated string\r\n  /**\r\n   * See enum NamePattern. Allowed values:\r\n   *  - entity_plus_attribute (default)\r\n   *  - entity_name \r\n   *  - attribute\r\n   */\r\n  namePattern?: string;  // see enum NamePattern\r\n  /**\r\n   * Supported values:\r\n   *  - id_short (default)\r\n   *  - id\r\n   *  - name of an attribute that determines the entity name, e.g. \"name\"\r\n   */\r\n  entityName?: string;\r\n  /**\r\n   * @deprecated use entityName instead\r\n   */\r\n  useLongEntityName?: boolean;\r\n  /**\r\n   * A query adhering to the NGSI-LD query language\r\n   */\r\n  customQuery?: string;\r\n  /**\r\n   * A query adhering to the NGSI-LD scope query language\r\n   */\r\n  scopeQuery?: string;\r\n\r\n  /**\r\n   * Filter for geometric properties.\r\n   * Geo relationship as per clause 4.10.\r\n   * Examples:\r\n   *  - near;maxDistance==2000 (in m; also minDistance)\r\n   *  - equals\r\n   *  - disjoint\r\n   *  - intersects\r\n   *  - within\r\n   *  - contains\r\n   *  - overlaps\r\n   */\r\n  georel?: string;\r\n  /**\r\n   * Filter for geometric properties.\r\n   * Geometry as per clause 4.10.\r\n   * Examples:\r\n   *   - Point, Polygon\r\n   */\r\n  geometry?: string;\r\n   /**\r\n    * Filter for geometric properties.\r\n    * Coordinates serialized as a string as per clause 4.10.\r\n    * Examples\r\n    *   - [8,40] (for Point)\r\n    *   - [[[100.0,0.0],[101.0,0.0],[101.0,1.0],[100.0,1.0],[100.0,0.0]]] (for Polygon)\r\n    */\r\n  coordinates?: string;\r\n  /**\r\n   * Filter for geometric properties. Default: \"location\". Typical examples:\r\n   *   - location\r\n   *   - observationSpace\r\n   *   - operationSpace\r\n   */\r\n  geoproperty?: string; \r\n\r\n  /**\r\n   * Defaults to \"observedAt\". Relevant for query type TEMPORAL.\r\n   */\r\n  timeProperty?: TemporalPropertyKey;\r\n\r\n  /**\r\n   * Only relevant for queryType TEMPORAL\r\n   * Supported values \"totalCount\", \"distinctCount\", \"sum\", \"avg\", \"min\", \"max\",\"stddev\", \"sumsq\".\r\n   * Note: this is not implemented in Mintaka: https://github.com/FIWARE/mintaka/issues/99 and not tested yet\r\n   */\r\n  aggrMethod?: string;\r\n  /**\r\n   * Only relevant for queryType TEMPORAL\r\n   * Note: this is not implemented in Mintaka: https://github.com/FIWARE/mintaka/issues/99  and not tested yet\r\n   */\r\n  aggrPeriodDuration?: string\r\n  /**\r\n   * Only relevant for queryType NODE_GRAPH.\r\n   * Attributes whose values are displayed within the nodes.\r\n   * \r\n   * Key \"\": default attributes\r\n   * Other keys: entity types\r\n   * Specific settings per type overwrite the default keys\r\n   */\r\n  primaryNodeAttributes?: Record<string, string[]>;\r\n  /**\r\n   * Only relevant for queryType NODE_GRAPH\r\n   * Attributes whose values are displayed within the nodes.\r\n   * \r\n   * Key \"\": default attributes\r\n   * Other keys: entity types\r\n   * Specific settings per type overwrite the default keys\r\n   */\r\n  secondaryNodeAttributes?: Record<string, string[]>;\r\n\r\n  /**\r\n   * Only relevant for queryType NODE_GRAPH\r\n   * Attribute used to derive the arc coloring.\r\n   * Must take values between 0 and 1. (TODO allow for value range config?)\r\n   */\r\n   arcColorNodeAttributes?: Record<string, string[]>;\r\n   arcColorComplementLabel?: string;\r\n  /**\r\n   * Only relevant for queryType NODE_GRAPH\r\n   */\r\n  primaryArcColor?: string;\r\n  /**\r\n   * Only relevant for queryType NODE_GRAPH\r\n   */\r\n  secondaryArcColor?: string;\r\n\r\n}\r\n\r\nexport const defaultQuery: Partial<NgsildQuery> = {\r\n  queryType: NgsildQueryType.TEMPORAL.valueOf()\r\n\r\n};\r\n\r\n/**\r\n * These are options configured for each DataSource instance\r\n */\r\nexport interface NgsildSourceOptions extends DataSourceJsonData {\r\n  contextUrl?: string;\r\n  timeseriesUrl?: string;\r\n  tokenUrl?: string;\r\n  /**\r\n   * NGSILD-Tenant header\r\n   */\r\n  tenant?: string;\r\n  /**\r\n   * Specify whether to use \"format\" of \"options\" parameter.\r\n   * Currently, \"options\" is the default, at some point the spec-conformant \"format\" should become the default,\r\n   * once supported by the main brokers.\r\n   */\r\n  formatParameter?: \"format\"|\"options\";\r\n  /**\r\n   * Usually temporal data is requested in simplified temporal format, but this can be changed via this parameter.\r\n   */\r\n  avoidSimplifiedTemporalFormat?: boolean;\r\n  /**\r\n   * Determines how to execute a test request; orion uses the custom /version endpoint, generic uses /types\r\n   */\r\n  flavour?: \"generic\"|\"orion\"; \r\n  //tokenAuth?: string; // will be set automatically to \"tokenAuth\" when auth is active => fed into plugin.json\r\n}\r\n\r\n/**\r\n * Value that is used in the backend, but never sent over HTTP to the frontend \r\n * TODO auth\r\n */\r\nexport interface NgsildSecureJsonData {\r\n  clientId?: string;\r\n  clientSecret?: string;\r\n}\r\n","export class JsUtils {\r\n\r\n    static concatPaths(p1: string, p2: string): string {\r\n        if (!p1)\r\n            {return p2;}\r\n        if (!p2)\r\n            {return p1;}\r\n        const end: boolean = p1.endsWith(\"/\");\r\n        const start: boolean = p2.startsWith(\"/\");\r\n        if (end && start)\r\n            {p2 = p2.substring(1);}\r\n        else if (!end && !start)\r\n            {p2 = \"/\" + p2;}\r\n        return p1 + p2;\r\n    }\r\n\r\n    static appendQueryParam(url: string, keyValue: string): string {\r\n        const sep: string = url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\r\n        return url + sep + keyValue;\r\n    }\r\n\r\n}\r\n","// TODO \r\nexport const units: Record<string, string> = {\r\n    // temperatures\r\n    CEL: \"°C\",\r\n    KEL: \"K\",\r\n    // distances\r\n    MTR: \"m\",\r\n    CMT: \"cm\",\r\n    DMT: \"dm\",\r\n    MMT: \"mm\",\r\n    KTM: \"km\",\r\n    KMT: \"km\",\r\n    C81: \"rad\",\r\n    DD: \"°\",\r\n    D61: \"'\",\r\n    D62: \"\\\"\",\r\n    // time\r\n    C47: \"ns\",\r\n    B98: \"µs\",\r\n    C26: \"ms\",\r\n    SEC: \"s\",\r\n    MIN: \"min\",\r\n    HUR: \"h\",\r\n    DAY: \"d\",\r\n    ANN: \"y\",\r\n    \r\n    // velocity\r\n    MTS: \"m/s\",\r\n    KMH: \"km/h\",\r\n    \"2X\": \"m/min\",\r\n    M62: \"km/s\",\r\n    MSK: \"m/s²\",\r\n    \"2A\": \"rad/s\", // angular velocity\r\n    M46: \"r/min\",\r\n\r\n    // weight\r\n    MGM: \"mg\",\r\n    GRM: \"g\",\r\n    KGM: \"kg\",\r\n    TNE: \"t\",\r\n    KTN: \"kt\",\r\n    // pressure\r\n    \"74\": \"mPa\",\r\n    PAL: \"Pa\",\r\n    KPA: \"kPa\",\r\n    HBA: \"hbar\",\r\n    MBR: \"mbar\",\r\n    BAR: \"bar\",\r\n    KBA: \"kbar\",\r\n    ATM: \"atm\",\r\n    // energy\r\n    JOU: \"J\",\r\n    KJO: \"kJ\",\r\n    \"3B\": \"MJ\",\r\n    GV: \"GJ\",\r\n    WHR: \"Wh\",\r\n    KWH: \"kWh\",\r\n    MWH: \"MWh\",\r\n    GWH: \"GWh\",\r\n    A53: \"eV\",\r\n    B29: \"keV\",\r\n    B71: \"MeV\",\r\n    A85: \"GeV\",\r\n    // power\r\n    C31: \"mW\",\r\n    WTT: \"W\",\r\n    KWT: \"kW\",\r\n    MAW: \"MW\",\r\n    A90: \"GW\",\r\n    D46: \"VA\",\r\n    KVA: \"kVA\",\r\n    MVA: \"MVA\",\r\n\r\n    // electricity\r\n    AMP: \"A\",\r\n    B22: \"kA\",\r\n    \"4K\": \"mA\",\r\n    COU: \"C\",\r\n    AMH: \"Ah\",\r\n    TAH: \"kAh\",\r\n    VLT: \"V\",\r\n    KVT: \"kV\",\r\n    \"2Z\": \"mV\",\r\n    D50: \"V/m\",\r\n    D33: \"T\",\r\n    C29: \"mT\",\r\n    OHM: \"Ω\",\r\n    E45: \"mΩ\",\r\n    B49: \"kΩ\",\r\n    B75: \"MΩ\",\r\n\r\n    // other \r\n    MTK: \"m²\",\r\n    MTQ: \"m³\",\r\n    LTR: \"l\",\r\n    MLT: \"ml\",\r\n    HTZ: \"Hz\",\r\n    NEW: \"N\",\r\n    C62: \"\", // \"one\", for relative density etc\r\n    KGS: \"kg/s\",\r\n    MQS: \"m³/s\",\r\n    MQH: \"m³/h\", \r\n    B11: \"J/(kg K)\", // heat capacity\r\n    B43: \"kJ/(kg K)\",\r\n    \"2N\": \"dB\",\r\n    BQL: \"Bq\"\r\n    \r\n};\n","import { units } from \"units\";\r\n\r\n/* [value, iso datetime] */\r\nexport type Measurement = [number, string];\r\n\r\nexport type TemporalPropertyKey = \"observedAt\"|\"createdAt\"|\"modifiedAt\"|\"deletedAt\";\r\n\r\nexport type EntityTemporal<V = any> = Omit<{\r\n    [attribute: string]: {\r\n        type: \"Property\"|\"Relationship\";\r\n        values: Measurement[];\r\n    } | Array<Property<V>>;\r\n}, \"id\"|\"type\"|\"@context\"|TemporalPropertyKey>&{\r\n    id: string; // the entity id\r\n    type: string; // entity type\r\n    \"@context\": any;\r\n}\r\n\r\nexport interface EntityType {\r\n    typeName: string;\r\n    attributeNames: string[]; /* XXX cannot provide any static metadata here */\r\n    shortName?: string; \r\n}\r\n\r\nexport type Value<V> = V|{\"@value\": V};\r\n\r\nexport type TemporalProperty = {\r\n    /** The string value is actually of Date format */\r\n    [temporal in TemporalPropertyKey]?: string;\r\n}\r\n\r\n// the type is not exact, we would need an omit here around the first type, but this leads to an error \r\n// due to circular references; furthermore non-rectified properties look simpler than that. \r\n// This is rather a first order approximation.\r\nexport type Property<V=any> = {\r\n    [attribute: string]: Property|Relationship|Property[]|Relationship[];\r\n} & {\r\n    type: \"Property\";\r\n    value: Value<V>;\r\n    unitCode?: string;\r\n    datasetId?: string;\r\n}&TemporalProperty;\r\n\r\nexport type Relationship = {\r\n    [attribute: string]: Property|Relationship|Property[]|Relationship[];\r\n} & {\r\n    type: \"Relationship\";\r\n    object: string;\r\n    observedAt?: string;\r\n    datasetId?: string;\r\n}&TemporalProperty;\r\n\r\nexport const getValue = <V>(property: Property<V>|Array<Property<V>>): any => {\r\n    if (property === undefined || property === null)\r\n        {return undefined;}\r\n    if (typeof property !== \"object\")\r\n        {return property;}\r\n    if (Array.isArray(property))\r\n        {return property.map(getValue);}\r\n    if (property?.value === undefined)\r\n        {return undefined;}\r\n    if (typeof property.value === \"object\" && \"@value\" in property.value!)\r\n        {return property.value[\"@value\"];}\r\n    return property.value;\r\n}\r\n\r\nexport const getValueWithUnit = <V>(property: Property<V>) => {\r\n    let v: any = getValue(property);\r\n    if (isFinite(v) && typeof property === \"object\") {\r\n        let unit = property.unitCode;\r\n        if (unit) {\r\n            unit = units[unit] || unit;\r\n            v = v + (unit.startsWith(\"°\") ? \"\": \" \") + unit;\r\n        }\r\n    }\r\n    return v;\r\n}\r\n\r\n/* [longitude, latitude], in degrees */\r\nexport type GeoCoordinates = [number, number];\r\nexport type GeoPoint = {\r\n    type: \"Point\";\r\n    coordinates: GeoCoordinates;\r\n}\r\nexport type GeoLineString = {\r\n    type: \"LineString\";\r\n    coordinates: GeoCoordinates[];\r\n}\r\nexport type GeoPolygon = {\r\n    type: \"Polygon\";\r\n    coordinates: GeoCoordinates[][];\r\n}\r\n\r\nexport type GeoType = GeoPoint|GeoLineString|GeoPolygon; // TODO others?\r\nexport type GeoProperty = Omit<Property<GeoType>, \"type\">&{type: \"GeoProperty\"};\r\n\r\nexport type Attribute = Property|Relationship|GeoProperty;\r\n\r\nexport type Entity = Omit<{\r\n    [attribute: string]: Attribute|Attribute[];\r\n}, \"id\"|\"type\"|\"@context\">&{\r\n    id: string; // the entity id\r\n    type: string; // entity type\r\n    \"@context\": any;\r\n    location?: GeoProperty;\r\n}\r\n\r\nexport const INVALID_ATTRIBUTES: readonly string[] = Object.freeze([\"id\", \"type\", \"@context\"]);\r\n\r\n// TODO query language filters\r\n","import { MutableDataFrame } from \"@grafana/data\";\r\nimport { Entity, GeoProperty, GeoType, getValue, GeoCoordinates, Property, getValueWithUnit } from \"ngsildTypes\";\r\nimport { NgsildQuery } from \"types\";\r\n\r\nexport class GeoHandler {\r\n\r\n    static handleGeoResult(entities: Entity[], query: NgsildQuery): MutableDataFrame {\r\n        let allAttributes: string[] = entities\r\n          .map(result => Object.keys(result))\r\n          .flatMap(attributes => attributes)\r\n          // XXX\r\n          .filter(attribute => attribute !== \"@context\" && attribute !== \"location\" && attribute !== \"operationSpace\" && attribute !== \"observationSpace\");\r\n        allAttributes = [...new Set(allAttributes)]; // want unique attributes\r\n        const fields: Array<{name: string; values: any[]}>\r\n            = allAttributes.map(attr => {return {name: attr, values: [] } });\r\n        const longitude = {name: \"longitude\", values: [] as any[]};\r\n        const latitude = {name: \"latitude\", values: [] as any[]};\r\n        const names = {name: \"name\", values: [] as any[]};\r\n        entities.forEach((entity: Entity) => {\r\n          const location: GeoProperty = entity.location!;\r\n          const value: GeoType = location?.value as any as GeoType; // XXX imperfection of our typings...\r\n          if (value.type !== \"Point\") {\r\n            // TODO support more geo types\r\n            console.log(\"Skipping unsupported geo type\", value?.type, \"for entity\", entity);\r\n            return;\r\n          }\r\n          fields.forEach(field => {\r\n            const value = getValue/*WithUnit*/(entity[field.name] as any); // TODO unit would be preferable, but since we don't know which field may be used for marker sizing we cannot do it\r\n            field.values.push(value); \r\n          });\r\n          const coordinates: GeoCoordinates = value.coordinates;\r\n          longitude.values.push(coordinates[0]);\r\n          latitude.values.push(coordinates[1]);\r\n          const nameField = !!query.entityName && query.entityName in entity ? query.entityName : \"id\";\r\n          let name: string = getValue(entity[nameField] as any)?.toString() || entity.id;\r\n          if (query.entityName === \"id_short\" || (!query.entityName && !query.useLongEntityName)) {\r\n            const col: number = name.lastIndexOf(\":\");\r\n              if (col >= 0 && col < name.length-1)\r\n                {name = name.substring(col + 1);} \r\n          }\r\n          names.values.push(name);\r\n        });\r\n        [latitude, longitude, names].forEach(f => fields.unshift(f));\r\n        return new MutableDataFrame({\r\n            refId: query.refId,\r\n            fields: fields\r\n          });\r\n      }\r\n\r\n}\r\n","import { FieldDTO, FieldType, MutableDataFrame, NodeGraphDataFrameFieldNames } from \"@grafana/data\";\r\nimport { NgsildDataSource } from \"datasource\";\r\nimport { Entity, getValue, getValueWithUnit, Property, Relationship } from \"ngsildTypes\";\r\nimport { NgsildQuery, NgsildQueryType } from \"types\";\r\n\r\n/*\r\n  Graph panel documentation: https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/node-graph/\r\n    - \"Data source needs to return two data frames, one for nodes and one for edges. You have to set frame.meta.preferredVisualisationType = 'nodeGraph' \r\n       on both data frames or name them nodes and edges respectively for the node graph to render.\"\r\n*/\r\nexport class NodeGraphHandler {\r\n\r\n    constructor(\r\n        private readonly datasource: NgsildDataSource, \r\n        private readonly query: NgsildQuery) {}\r\n\r\n\r\n    // TODO move maxGraphDepth to NgsildQuery! \r\n    async handleGraphResult(entities: Entity[], maxGraphDepth: number): Promise<[MutableDataFrame, MutableDataFrame]> {\r\n        entities = await this.resolveMissingEntities(entities, maxGraphDepth);\r\n        const entityLabel = (entity: Entity) => {\r\n            const nameField = !!this.query.entityName && this.query.entityName in entity ? this.query.entityName : \"id\";\r\n            let id: string = getValue(entity[nameField] as any)?.toString() || entity.id;\r\n            if (this.query.entityName !== \"id_short\" || (!this.query.entityName && this.query.useLongEntityName))\r\n                {return id;}\r\n            const col: number = id.lastIndexOf(\":\");\r\n            return col > 0 && col<id.length-1 ? id.substring(col+1) : id;\r\n        };\r\n        const nodeIdField: FieldDTO = { name: \"id\", values: [], type: FieldType.string };\r\n        const nodeTitleField: FieldDTO = { name: \"title\", values: [], type: FieldType.string };\r\n        const nodeSubTitleField: FieldDTO = { name: \"suntitle\", values: [], type: FieldType.string };\r\n        const nodeMainStatField: FieldDTO = { name: \"mainStat\", values: [], type: FieldType.string, config: {/*displayName: \"Test\" , unit: \"test\", color: \"sdds\"*/} };  // TODO unit and color, etc\r\n        const nodeSecondaryStatField: FieldDTO = { name: \"secondaryStat\", values: [], type: FieldType.string, config: {} };\r\n        // TODO configurable color\r\n        const nodeArcField1: FieldDTO  = {name: \"arc__zone1\", values: [], type:FieldType.number, config: {color: {mode: \"fixed\", fixedColor: \"green\"} }};\r\n        const nodeArcField2: FieldDTO  = {name: \"arc__zone2\", values: [], type:FieldType.number, config: {color: {mode: \"fixed\", fixedColor: \"red\"} }};\r\n        const nodeArcFieldNeutral: FieldDTO  = {name: \"arc__neutral\", values: [], type:FieldType.number, config: {displayName: \"n.a.\" }};\r\n        const getStatValue = (entity: Entity, statAttributes?: Record<string, string[]>, options?: {returnAttribute?: boolean, skipUnit?: boolean}): any => {\r\n            if (!statAttributes)\r\n                {return undefined;}\r\n            const attributes: string[]|undefined = statAttributes[entity.type] || statAttributes[\"\"];\r\n            if (!attributes)\r\n                {return undefined;}\r\n            const selectedAttr: string|undefined = attributes.find(attr => attr in entity);\r\n            if (!selectedAttr)\r\n                {return undefined;}\r\n            if (options?.returnAttribute)\r\n                {return selectedAttr;}\r\n            let property = entity[selectedAttr];\r\n            if (Array.isArray(property) && property.length > 0)\r\n                {property = property[0];}\r\n            const value: any = options?.skipUnit ? getValue(property as Property<unknown>) : getValueWithUnit(property as Property<unknown>);\r\n            return /*value !== undefined ? selectedAttr + \": \" + value  : */value;\r\n        };\r\n        const setFieldConfig = (field: FieldDTO, statAttributes?: Record<string, string[]>) => {\r\n            if (!statAttributes)\r\n                {return;}\r\n            const entity = entities.find(e => getStatValue(e, statAttributes, {returnAttribute: true}));\r\n            if (entity) {\r\n                const attr = getStatValue(entity, statAttributes, {returnAttribute: true});\r\n                field.config!.displayName = attr;\r\n                 /*\r\n                const value0: Property<unknown>|Array<Property<unknown>> = entity[attr] as any;\r\n                const value: Property<unknown>|undefined = Array.isArray(value0) ? (value0.length > 0 ? value0[0] : undefined) : value0; \r\n                if (value?.unitCode) { // FIXME first convert it to a human-readable unit \r\n                    field.config!.unit = units[value.unitCode] || value.unitCode;\r\n                }\r\n                */\r\n            }\r\n        }\r\n        setFieldConfig(nodeMainStatField, this.query.primaryNodeAttributes); // TODO color?\r\n        setFieldConfig(nodeSecondaryStatField, this.query.secondaryNodeAttributes);\r\n        //setFieldConfig(nodeArcField1, this.query.arcColorNodeAttributes);\r\n        if (this.query.arcColorNodeAttributes) {\r\n            const entity = entities.find(e => getStatValue(e, this.query.arcColorNodeAttributes, {returnAttribute: true}));\r\n            if (entity) {\r\n                const attr = getStatValue(entity, this.query.arcColorNodeAttributes, {returnAttribute: true});\r\n                nodeArcField1.config!.displayName = attr;\r\n                nodeArcField2.config!.displayName = this.query.arcColorComplementLabel || (\"~\" + attr);\r\n                if (this.query.primaryArcColor)\r\n                    {nodeArcField1.config!.color!.fixedColor = this.query.primaryArcColor;}\r\n                if (this.query.secondaryArcColor)\r\n                    {nodeArcField2.config!.color!.fixedColor =  this.query.secondaryArcColor;}\r\n            }\r\n        }\r\n\r\n        entities.forEach(entity => {\r\n            const label: string = entityLabel(entity);\r\n            let type: string = entity.type;\r\n            const dot: number = type.lastIndexOf(\".\");\r\n            if (dot >= 0 && dot < type.length-1) {\r\n                type = type.substring(dot+1);\r\n            }\r\n            const subtitle = label.indexOf(type) >= 0 ? \"\" : type;\r\n            (nodeIdField.values as string[]).push(entity.id);\r\n            (nodeTitleField.values as string[]).push(label);\r\n            (nodeSubTitleField.values as string[]).push(subtitle);\r\n            (nodeMainStatField.values as any[]).push(getStatValue(entity, this.query?.primaryNodeAttributes));\r\n            (nodeSecondaryStatField.values as any[]).push(getStatValue(entity, this.query?.secondaryNodeAttributes));\r\n\r\n            const arcStatValue: number = getStatValue(entity, this.query?.arcColorNodeAttributes, {skipUnit: true});\r\n            const complementArcState = 1-arcStatValue;\r\n            const neutralArcState = isFinite(arcStatValue) ? 0 : 1;\r\n            (nodeArcField1.values as any[]).push(arcStatValue);\r\n            (nodeArcField2.values as any[]).push(complementArcState);\r\n            (nodeArcFieldNeutral.values as any[]).push(neutralArcState);\r\n        });\r\n        const edgeIdField: FieldDTO = { name: \"id\", values: [], type: FieldType.string };\r\n        const edgeSourceField: FieldDTO = { name: \"source\", values: [], type: FieldType.string };\r\n        const edgeTargetField: FieldDTO = { name: \"target\", values: [], type: FieldType.string };\r\n        const edgeMainStatField: FieldDTO = { name: \"mainStat\", values: []  }; // can be string or number\r\n        for (const entity of entities) {\r\n            const relationships: Array<[string, Relationship]> = Object.entries(entity)\r\n                .filter(([attribute, value]) => value?.type === \"Relationship\" && value?.object !== undefined && entities.find(entity2 => entity2.id === value.object) !== undefined);\r\n            relationships.forEach(([attr, relationship]) => {\r\n                (edgeIdField.values as string[]).push(entity.id + \"__\" + attr);\r\n                (edgeSourceField.values as string[]).push(entity.id);\r\n                (edgeTargetField.values as string[]).push(relationship.object);\r\n                (edgeMainStatField.values as string[]).push(attr);\r\n            });\r\n        }\r\n        const nodeFields = [nodeIdField, nodeTitleField, nodeSubTitleField];\r\n        if (this.query.primaryNodeAttributes)\r\n            {nodeFields.push(nodeMainStatField);}\r\n        if (this.query.secondaryNodeAttributes)\r\n            {nodeFields.push(nodeSecondaryStatField);}\r\n        if (this.query.arcColorNodeAttributes) {\r\n            nodeFields.push(nodeArcField1, nodeArcField2);\r\n            if ((nodeArcFieldNeutral.values as number[]).findIndex(n => n > 0) >= 0)\r\n                {nodeFields.push(nodeArcFieldNeutral);}\r\n        }\r\n        const nodes: MutableDataFrame = new MutableDataFrame({\r\n            refId: this.query.refId,\r\n            fields: nodeFields,   \r\n            meta: {preferredVisualisationType: \"nodeGraph\"},\r\n            name: \"nodes\"\r\n        });\r\n        const edges: MutableDataFrame = new MutableDataFrame({\r\n            refId: this.query.refId,\r\n            fields: [edgeIdField, edgeSourceField, edgeTargetField, edgeMainStatField],  \r\n            meta: {preferredVisualisationType: \"nodeGraph\"},\r\n            name: \"edges\"\r\n        });\r\n        return [nodes, edges];\r\n    }\r\n\r\n    private async resolveMissingEntities(entities: Entity[], depthCnt: number, startIdx = 0): Promise<Entity[]> {\r\n        if (depthCnt <= 0)\r\n            {return entities;}\r\n        const missingEntities: Set<string> = new Set();\r\n        for (let idx=startIdx; idx<entities.length; idx++) {\r\n            const entity = entities[idx];\r\n            const relationships: Array<[string, Relationship]> = Object.entries(entity)\r\n                .filter(([attribute, value]) => value?.type === \"Relationship\" && value?.object !== undefined);\r\n            const missing: string[] = relationships.map(([attr, target]) => target.object).filter(target => entities.find(entity2 => entity2.id === target) === undefined);\r\n            missing.forEach(id => missingEntities.add(id));\r\n        }\r\n        // request multiple entities in a single go\r\n        const newEntities: Entity[] = await this.getEntites(missingEntities);\r\n        if (newEntities.length === 0)\r\n            {return entities;}\r\n        const newStartIdx: number = entities.length;\r\n        entities.push(...newEntities);\r\n        const recursiveEntities: Entity[] = await this.resolveMissingEntities(entities, depthCnt--, newStartIdx);\r\n        return recursiveEntities;\r\n    }\r\n\r\n    private async getEntites(ids: Set<string>): Promise<Entity[]> {\r\n        if (ids.size === 0)\r\n            {return [];}\r\n        const entityId: string = [...ids].join(\",\");\r\n        let additionalEntities: Entity|Entity[] = await this.datasource.request({queryType: NgsildQueryType.ENTITY, entityId: entityId});\r\n        if (!additionalEntities)\r\n            {return [];}\r\n        if (!Array.isArray(additionalEntities))\r\n            {additionalEntities = [additionalEntities];}\r\n        return additionalEntities;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import defaults from 'lodash/defaults';\r\n\r\nimport {\r\n  DataQueryRequest,\r\n  DataQueryResponse,\r\n  DataSourceApi,\r\n  DataSourceInstanceSettings,\r\n  MutableDataFrame,\r\n  FieldType,\r\n} from '@grafana/data';\r\n\r\nimport { getBackendSrv, BackendSrv, FetchResponse, BackendSrvRequest } from \"@grafana/runtime\";\r\n\r\nimport { NgsildQuery, NgsildSourceOptions, defaultQuery, NgsildQueryType, NamePattern, namePatternFromValue } from './types';\r\nimport { JsUtils } from 'utils';\r\nimport { Measurement, EntityTemporal, INVALID_ATTRIBUTES, Entity, getValue, Property } from 'ngsildTypes';\r\nimport { isNumber } from 'lodash';\r\nimport { GeoHandler } from 'GeoHandler';\r\nimport { NodeGraphHandler } from 'NodeGraphHandler';\r\n\r\n\r\nexport class NgsildDataSource extends DataSourceApi<NgsildQuery, NgsildSourceOptions> {\r\n\r\n  private readonly baseUrl: string;  // http://broker:1026/ngsi-ld/v1\r\n  private readonly timeseriesUrl: string;  // http://broker-ts:8080\r\n  private readonly contextUrl: string; // http://context/ngsi-context.jsonld\r\n  private readonly contextLinkHeader: string; // <http://context/ngsi-context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\r\n  private readonly flavour: \"generic\"|\"orion\";\r\n  private readonly tenant: string|undefined;\r\n  private readonly formatParameter: \"options\"|\"format\"; // changed from options to format between spec versions ...\r\n  private readonly avoidSimplifiedTemporalFormat: boolean;\r\n\r\n  constructor(instanceSettings: DataSourceInstanceSettings<NgsildSourceOptions>) {\r\n    super(instanceSettings);\r\n    let baseUrl = instanceSettings.url || \"\";\r\n    if (baseUrl.indexOf(\"/ngsi-ld/v1\") < 0)\r\n      {baseUrl = JsUtils.concatPaths(baseUrl, \"/ngsi-ld/v1\");}\r\n    this.baseUrl = baseUrl;\r\n    this.flavour = instanceSettings.jsonData?.flavour?.toLowerCase() as any || \"generic\";\r\n    this.tenant = instanceSettings.jsonData?.tenant?.trim() || undefined;\r\n    this.formatParameter = instanceSettings.jsonData?.formatParameter?.toLowerCase() === \"format\" ? \"format\" : \"options\";\r\n    this.avoidSimplifiedTemporalFormat = !!instanceSettings.jsonData.avoidSimplifiedTemporalFormat;\r\n    const actualTimeseriesUrl: string = instanceSettings.jsonData?.timeseriesUrl || \"\";\r\n    // note: the route alias \"temporal\" for instanceSettings.jsonData.timeseriesUrl in the backend proxy \r\n    // is defined in plugin.json, see https://community.grafana.com/t/grafana-datasource-backend-proxy/6861/4\r\n    // it is a bit strange though that we need to prepend the broker url for this\r\n    const timeseriesUrl: string = instanceSettings.access === \"proxy\" ? \r\n      JsUtils.concatPaths(instanceSettings.url?.replace(\"/ngsi-ld/v1\", \"\")||\"\", \"temporal\") : actualTimeseriesUrl; \r\n    this.timeseriesUrl = timeseriesUrl;\r\n    this.contextUrl = instanceSettings.jsonData?.contextUrl || \"\";\r\n    this.contextLinkHeader = !this.contextUrl ? \"\" :\r\n      \"<\" + this.contextUrl + \">; rel=\\\"http://www.w3.org/ns/json-ld#context\\\"; type=\\\"application/ld+json\\\"\";\r\n  }\r\n\r\n  async query(options: DataQueryRequest<NgsildQuery>): Promise<DataQueryResponse> {\r\n    const backend: BackendSrv = getBackendSrv();\r\n    const {range} = options; \r\n    const data0: Array<Promise<MutableDataFrame[]>> = options.targets!.map((target: NgsildQuery) => this.querySingle(defaults(target, defaultQuery), \r\n        {backend: backend, from: range?.from?.valueOf(), to: range?.to?.valueOf()}));\r\n    const frames: MutableDataFrame[] = (await Promise.all(data0))\r\n      .filter(f => f?.length > 0)\r\n      .flatMap(f => f);\r\n    return { data: frames };\r\n  }\r\n\r\n  // it is somewhat ugly that we need to create multiple data fromes from a single request,\r\n  // but different attributes may not be time-aligned, so there is little we can do\r\n  private async querySingle(query: NgsildQuery, options?: {backend?: BackendSrv, from?: number, to?: number;}): Promise<MutableDataFrame[]> {\r\n    if (!query.entityType&&!query.entityId&&!(query.attributes?.length! > 0))\r\n      {return [];}\r\n    let results: EntityTemporal|EntityTemporal[]|Entity|Entity[] = await this.request(query, options);\r\n    if (!Array.isArray(results))\r\n      {results = [results] as any;}\r\n    if (query.queryType === NgsildQueryType.GEO)\r\n      {return [GeoHandler.handleGeoResult(results as Entity[], query)];}\r\n    if (query.queryType === NgsildQueryType.NODE_GRAPH)\r\n      {return new NodeGraphHandler(this, query).handleGraphResult(results as Entity[], 4);} // TODO max depth\r\n    const frames: MutableDataFrame[] = [];\r\n    for (const result of results as any) {\r\n      const namePattern: NamePattern = namePatternFromValue(query.namePattern);\r\n      const nameField: string = \r\n          (namePattern !== NamePattern.ATTRIBUTE && query.entityName !== \"id\" && query.entityName !== \"id_short\" && !!query.entityName && query.entityName in result) ? query.entityName : \"id\";\r\n      let name: string = namePattern === NamePattern.ATTRIBUTE ? \"\" : (getValue(result[nameField] as any)?.toString() || result.id);\r\n      const useShortEntityId: boolean = query.entityName === \"id_short\" || (query.entityName === undefined && !query.useLongEntityName);\r\n      if (useShortEntityId) {\r\n        const col: number = name.lastIndexOf(\":\");\r\n        if (col >= 0 && col < name.length-1)\r\n          {name = name.substring(col + 1);} // avoid lengthy expanded names\r\n      }\r\n      if (namePattern === NamePattern.ENTITY_PLUS_ATTRIBUTE)\r\n        {name += \":\"}\r\n      const attributes: string[] = Object.keys(result);\r\n      const invalidAttributes = [...INVALID_ATTRIBUTES];\r\n      if (nameField !== \"id\")\r\n        {invalidAttributes.push(nameField);}\r\n      invalidAttributes.forEach(key => {\r\n        const idx: number = attributes.indexOf(key);\r\n        if (idx >= 0)\r\n          {attributes.splice(idx, 1);}\r\n      });\r\n      for (const attribute of attributes) {\r\n        if (result[attribute].type === \"Relationship\")\r\n          {continue;}\r\n        const attrName: string = namePattern === NamePattern.ENTITY_NAME ? name : name + attribute\r\n        if (!this.avoidSimplifiedTemporalFormat && result[attribute].values) {\r\n          const data: Measurement[] = result[attribute].values;\r\n          const field = { \r\n            name:  attrName, \r\n            values: data.map(point => point[0]), \r\n            type: FieldType.number \r\n          };\r\n          const time = { \r\n            name: \"Time\", \r\n            values: data.map(point => new Date(point[1]).getTime()), // in case of aggregated values there is another entry, period end time interval point[2]\r\n            type: FieldType.time \r\n          };\r\n          frames.push(new MutableDataFrame({\r\n            refId: query.refId,\r\n            fields: [time, field]\r\n          }));\r\n        } else if (this.avoidSimplifiedTemporalFormat && query.queryType === NgsildQueryType.TEMPORAL) {\r\n          const timeProperty = query.timeProperty || \"observedAt\";\r\n          const data: Array<Property<any>> = result[attribute];\r\n          if (!Array.isArray(data)) {\r\n            throw new Error(\"Temporal property array expected for attribute \" + attribute);\r\n          }\r\n          if (data.length > 0) {\r\n            if (!(timeProperty in data[0])) {\r\n              throw new Error(\"Temporal representation is missing the expected time attribute \" + timeProperty \r\n                  + \" for attribute \" + attribute);\r\n            }\r\n            const field = { \r\n              name:  attrName, \r\n              values: data.map(getValue), \r\n              type: FieldType.number \r\n            };\r\n            const time = { \r\n              name: \"Time\", \r\n              values: data.map(point => new Date(point[timeProperty]!).getTime()),\r\n              type: FieldType.time \r\n            };\r\n            frames.push(new MutableDataFrame({\r\n              refId: query.refId,\r\n              fields: [time, field]\r\n            }));\r\n          }\r\n        } else if (result[attribute].value !== undefined) {\r\n          let value: any = result[attribute].value;\r\n          if (typeof value === \"object\" && \"@value\" in value)\r\n            {value = value[\"@value\"];}\r\n          const type: FieldType = isNumber(value) ? FieldType.number : typeof value === \"string\" ? FieldType.string:\r\n              value === false || value === true ? FieldType.boolean : FieldType.other; \r\n          const field = { \r\n            name:  attrName, \r\n            values: [value], \r\n            type: FieldType.number \r\n          };\r\n          const t: number = isFinite(result[attribute].observedAt) ? result[attribute].observedAt : \r\n            isFinite(options?.from!) && isFinite(options?.to!) ? (options?.from! + options?.to!)/2 :\r\n            isFinite(options?.from!) ? options?.from : isFinite(options?.to!) ? options!.to : Date.now();\r\n          const time = { \r\n            name: \"Time\", \r\n            values: [t], \r\n            type: FieldType.time \r\n          };\r\n          frames.push(new MutableDataFrame({\r\n            refId: query.refId,\r\n            fields: [time,field]\r\n          }));\r\n        }\r\n      }\r\n    }\r\n    return frames;\r\n  }\r\n\r\n  async request<T=any>(\r\n      query: Omit<NgsildQuery, \"refId\">, \r\n      options?: { \r\n        backend?: BackendSrv, \r\n        from?: number, \r\n        to?: number; \r\n        limit?: number;\r\n        offset?: number;\r\n        lastN?: number;\r\n      }): Promise<T> {\r\n    const backend: BackendSrv = options?.backend || getBackendSrv();\r\n    let endpoint: string;\r\n    const ngsildOptionsParam: string[] = [];\r\n    switch (query.queryType) {\r\n    case NgsildQueryType.TEMPORAL:\r\n      endpoint = \"/temporal/entities\";\r\n      if (query.entityId)\r\n        {endpoint += \"/\" + /*encodeURIComponent(*/query.entityId/*)*/;} // note: encoding does not work with the backend proxy\r\n      if (!this.avoidSimplifiedTemporalFormat) \r\n        {ngsildOptionsParam.push(\"temporalValues\");} // make sure to query the simplified temporal representation\r\n      if (query.aggrMethod) {\r\n        ngsildOptionsParam.push(\"aggregatedValues\"); // \r\n        endpoint = JsUtils.appendQueryParam(endpoint, \"aggrMethods=\" + query.aggrMethod);\r\n        if (query.aggrPeriodDuration)\r\n          {endpoint = JsUtils.appendQueryParam(endpoint, \"aggrPeriodDuration=\" + query.aggrPeriodDuration);}\r\n      }\r\n      if (query.timeProperty && query.timeProperty !== \"observedAt\")\r\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"timeproperty=\" + query.timeProperty);}\r\n      break;\r\n    // the /version endpoint is actually orion-specific and can only be used with flavour === \"orion\"\r\n    // since we use this for testing the datasource only it is ok to simply use some random other endpoint\r\n    case NgsildQueryType.VERSION: \r\n      endpoint = this.flavour === \"orion\" ? \"/version\" : \"/types\"; \r\n      break;\r\n    case NgsildQueryType.TYPES:\r\n      endpoint = \"/types?details=true\";\r\n      break;\r\n    case NgsildQueryType.ATTRIBUTES:\r\n      if (!query.entityId) {\r\n        endpoint = \"/attributes\";\r\n        break;\r\n      }\r\n      // fallthrough\r\n    case NgsildQueryType.GEO:\r\n    case NgsildQueryType.NODE_GRAPH:\r\n    case NgsildQueryType.ENTITY:\r\n      endpoint = \"/entities\";\r\n      if (query.entityId) {\r\n        const hasComma: boolean = query.entityId.indexOf(\",\")>=0;\r\n        if (hasComma)\r\n          {endpoint += \"?id=\" + query.entityId.split(\",\").map(id=>id.trim()).filter(id=>id).map(encodeURIComponent).join(\",\");}\r\n        else\r\n          {endpoint += \"/\" + /*encodeURIComponent(*/query.entityId/*)*/;} // note: encoding does not work with the backend proxy\r\n      }\r\n      if (query.queryType === NgsildQueryType.GEO) {\r\n        if (query.attributes?.length!>0) {\r\n          if (query.attributes!.indexOf(\"location\") < 0)\r\n            {query.attributes!.push(\"location\");}\r\n        } else {\r\n          endpoint = JsUtils.appendQueryParam(endpoint, \"q=location\");\r\n        }\r\n      }\r\n      else if (query.queryType === NgsildQueryType.NODE_GRAPH) {\r\n        let attributes: string[] = query.attributes || [];\r\n        const addAttributes = (statAttributes?: Record<string, string[]>) => {\r\n          if (!statAttributes)\r\n            {return;}\r\n          attributes.push(...new Set(Object.values(statAttributes).flatMap(arr => arr)));\r\n        }\r\n        addAttributes(query.primaryNodeAttributes);\r\n        addAttributes(query.secondaryNodeAttributes);\r\n        addAttributes(query.arcColorNodeAttributes);\r\n        attributes = [...new Set(attributes)]; // keep only unique values\r\n        if (attributes.length > 0)\r\n          {query.attributes = attributes;}\r\n      }\r\n      break;\r\n    default:\r\n      throw new Error(\"Invalid query type \" + query.queryType);\r\n    }\r\n    if (query.entityType && !query.entityId)\r\n      {endpoint = JsUtils.appendQueryParam(endpoint, \"type=\" + encodeURIComponent(query.entityType));}\r\n    if (query.attributes?.length!>0) {\r\n      if (query.namePattern !== NamePattern.ATTRIBUTE.valueOf() && !!query.entityName && query.entityName !== \"id\" && query.entityName !== \"id_short\")\r\n        {query.attributes?.push(query.entityName);}\r\n      endpoint = JsUtils.appendQueryParam(endpoint, \"attrs=\" + query.attributes?.map(encodeURIComponent).join(\",\"));\r\n    }\r\n    if (query.queryType === NgsildQueryType.TEMPORAL)\r\n      {endpoint = NgsildDataSource.setTimeInterval(endpoint, options?.from, options?.to);}\r\n    if (query.georel) {\r\n      endpoint = JsUtils.appendQueryParam(endpoint, \"georel=\" + encodeURIComponent(query.georel));\r\n      if (query.geometry)\r\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"geometry=\" + encodeURIComponent(query.geometry));}\r\n      if (query.coordinates)\r\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"coordinates=\" + encodeURIComponent(query.coordinates));}\r\n      if (query.geoproperty)\r\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"geoproperty=\" + encodeURIComponent(query.geoproperty));}\r\n    }\r\n    if (query.customQuery)\r\n      {endpoint = JsUtils.appendQueryParam(endpoint, \"q=\" + encodeURIComponent(query.customQuery));}\r\n\r\n    const appendNumericParam = (url: string, key: string, value?: number): string => \r\n        isFinite(value!) ? JsUtils.appendQueryParam(url, encodeURIComponent(key) + \"=\" + encodeURIComponent(value as any)) : url;\r\n    const appendAll = (url: string, params: Record<string, number|undefined>, keys: string[]): string => {\r\n      for (const key of keys) {\r\n        url = appendNumericParam(url, key, params[key]);\r\n      }\r\n      return url;\r\n    }\r\n    if (options)\r\n      {endpoint = appendAll(endpoint, options as any, [\"limit\", \"offset\", \"lastN\"]);}\r\n    if (ngsildOptionsParam.length > 0) {\r\n      endpoint = JsUtils.appendQueryParam(endpoint, this.formatParameter + \"=\" + ngsildOptionsParam.join(\",\"));\r\n    }\r\n    if (query.scopeQuery?.trim()?.length! > 0) {\r\n      let sq = query.scopeQuery!.trim();\r\n      if (!sq.startsWith(\"\\\"\") && !sq.startsWith(\"'\")) {\r\n        sq = \"\\\"\" + sq + \"\\\"\";\r\n      }\r\n      endpoint = JsUtils.appendQueryParam(endpoint, \"scopeQ=\" + sq)\r\n    }\r\n    const isVersionRequest: boolean = endpoint?.startsWith(\"/version\");\r\n    const baseUrl = isVersionRequest ? this.baseUrl.replace(\"/ngsi-ld/v1\", \"\") : \r\n      query.queryType === NgsildQueryType.TEMPORAL ? this.timeseriesUrl :  this.baseUrl;\r\n    const url: string = JsUtils.concatPaths(baseUrl, endpoint);\r\n    const fetchOptions: BackendSrvRequest = {\r\n      method: \"GET\",\r\n      url: url,\r\n      responseType: \"json\",\r\n      headers: {Accept: \"application/json\"}\r\n    };\r\n    if (this.contextUrl && !isVersionRequest) {\r\n      fetchOptions.headers = {\r\n        Link: this.contextLinkHeader,\r\n        Accept: \"application/ld+json\"\r\n      };\r\n    }\r\n    if (this.tenant) {\r\n      fetchOptions.headers![\"NGSILD-Tenant\"] = this.tenant;\r\n    }\r\n    const result0: T = await NgsildDataSource.toPromise(backend.fetch(fetchOptions));\r\n    return result0;\r\n  }\r\n\r\n  private static setTimeInterval(url: string, from?: number, to?: number): string {\r\n    // @ts-ignore\r\n    const hasFrom: boolean = isFinite(from);\r\n    // @ts-ignore\r\n    const hasTo: boolean = isFinite(to);\r\n    if (hasFrom||hasTo) {\r\n      const timerel = (hasFrom&&hasTo) ? \"between\" : hasFrom ? \"after\" : \"before\";\r\n      url = JsUtils.appendQueryParam(url, \"timerel=\" + timerel);\r\n      const timeAt: number = hasFrom ? from! : to!;\r\n      url = JsUtils.appendQueryParam(url, \"timeAt=\" + new Date(timeAt).toISOString());\r\n      if (hasFrom&&hasTo)\r\n        {url = JsUtils.appendQueryParam(url, \"endTimeAt=\" + new Date(to!).toISOString());}\r\n    }\r\n    return url;\r\n  }\r\n\r\n  async testDatasource() {\r\n    return this.request({queryType: NgsildQueryType.VERSION});\r\n  }\r\n\r\n  // TODO would like to use lastValueFrom here, but import is unclear\r\n  private static toPromise<T>(observable: any /* Observable<FetchResponse<T>> */): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      observable.subscribe({\r\n        next: (response: FetchResponse<T>) => {\r\n          if (!response.ok) {\r\n            let message: string = response.status + \": \" + response.statusText;\r\n            if (response.data)\r\n              {message += \" (\" + response.data + \")\";}\r\n            reject(\"Failed to contact data source \" + message);\r\n          }\r\n          resolve(response.data);\r\n        },\r\n        error: (e: any) => reject(e)\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import React, { ChangeEvent, PureComponent } from 'react';\r\nimport { InlineFormLabel, LegacyForms, Label, Select, Checkbox, Input } from '@grafana/ui';\r\nimport { DataSourcePluginOptionsEditorProps, SelectableValue } from '@grafana/data';\r\nimport { NgsildSourceOptions, NgsildSecureJsonData } from './types';\r\n\r\nconst { SecretFormField, FormField } = LegacyForms;\r\n\r\ninterface Props extends DataSourcePluginOptionsEditorProps<NgsildSourceOptions, NgsildSecureJsonData> {}\r\n\r\ninterface State {}\r\n\r\nexport class ConfigEditor extends PureComponent<Props, State> {\r\n\r\n  onUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    onOptionsChange({ ...options, url: event.currentTarget.value?.trim() });\r\n  };\r\n\r\n  onContextUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, contextUrl: event.currentTarget.value?.trim() ||\"\"}};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onTenantChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, tenant: event.currentTarget.value?.trim() ||\"\"}};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onFormatParameterChange = (value: SelectableValue<\"format\"|\"options\">) => {\r\n    const newFormatParam: \"format\"|\"options\" = value.value === \"format\" ? \"format\" : \"options\" \r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, formatParameter: newFormatParam }};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onTemporalRepChange = (value: SelectableValue<\"simplified\"|\"expanded\">) => {\r\n    const avoidSimplifiedRep: boolean = value.value === \"expanded\";\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, avoidSimplifiedTemporalFormat: avoidSimplifiedRep }};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onTimeseriesUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, timeseriesUrl:event.currentTarget.value?.trim() ||\"\"}};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onAccessModeChange = (value: SelectableValue<string>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    onOptionsChange({ ...options, access: value.value || \"proxy\" });\r\n  };\r\n\r\n  onFlavourChange = (value: SelectableValue<string>) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = options.jsonData;\r\n    const options2 = {...options, jsonData: {...jsonData, flavour: value.value as any || \"generic\"  }};\r\n    onOptionsChange(options2);\r\n  };\r\n\r\n  onAuthStatusChange = (active: boolean) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = { ...options.jsonData, authType: active ? \"oauth\" : undefined};\r\n    onOptionsChange({ ...options, jsonData: jsonData });\r\n  };\r\n\r\n  onClientIdChange = (value: string) => {\r\n    // removing the client id does not make sense, if this is desired then the authentication should rather be disabled\r\n    // otherwise any config change would remove the configured id\r\n    if (!value) \r\n      {return;}\r\n    const { options, onOptionsChange } = this.props;\r\n    const securejsonData = { ...(options.secureJsonData || {}), clientId: value };\r\n    onOptionsChange({ ...options, secureJsonData: securejsonData });\r\n  }\r\n\r\n  onClientSecretChange = (value: string) => {\r\n    // removing the client secret does not make sense, if this is desired then the authentication should rather be disabled\r\n    // otherwise any config change would remove the configured secret\r\n    if (!value) \r\n      {return;}\r\n    const { options, onOptionsChange } = this.props;\r\n    const securejsonData = { ...(options.secureJsonData || {}), clientSecret: value };\r\n    onOptionsChange({ ...options, secureJsonData: securejsonData });\r\n  }\r\n\r\n  onTokenServerChange = (value: string) => {\r\n    const { options, onOptionsChange } = this.props;\r\n    const jsonData = { ...options.jsonData, tokenUrl: value };\r\n    onOptionsChange({ ...options, jsonData: jsonData });\r\n  }\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n    const { jsonData, secureJsonFields, secureJsonData } = options;\r\n    const isDirectMode: boolean = options.access === \"direct\";\r\n    const isAuthActive: boolean = jsonData.authType === \"oauth\" /*&& jsonData.tokenAuth === \"tokenAuth\"; */// TODO validate authType?\r\n    const authConfigured: boolean = isAuthActive && secureJsonFields.clientId && secureJsonFields.clientSecret;\r\n    return (\r\n      <div className=\"gf-form-group\">\r\n        <div className=\"gf-form\">\r\n          <FormField\r\n            label=\"Context broker URL\"\r\n            labelWidth={12}\r\n            inputWidth={20}\r\n            onChange={this.onUrlChange}\r\n            value={options.url || ''}\r\n            placeholder=\"http://localhost:1026\"\r\n          />\r\n        </div>\r\n        <div className=\"gf-form\">\r\n          <FormField\r\n            label=\"Temporal broker URL\"\r\n            labelWidth={12}\r\n            inputWidth={20}\r\n            onChange={this.onTimeseriesUrlChange}\r\n            value={jsonData.timeseriesUrl || ''}\r\n            placeholder=\"http://localhost:1026\"\r\n          />\r\n        </div>\r\n        <div className=\"gf-form\">\r\n          <FormField\r\n            label=\"Context URL\"\r\n            labelWidth={12}\r\n            inputWidth={20}\r\n            onChange={this.onContextUrlChange}\r\n            value={jsonData.contextUrl || ''}\r\n            placeholder=\"http://localhost:80/ngsi-context.jsonld\"\r\n          />\r\n        </div>\r\n        <div className=\"gf-form\">\r\n          <FormField\r\n            label=\"Tenant\"\r\n            tooltip=\"Optional tenant id. Formerly called 'Fiware-Service'.\"\r\n            labelWidth={12}\r\n            inputWidth={20}\r\n            onChange={this.onTenantChange}\r\n            value={jsonData.tenant || ''}\r\n            placeholder=\"Tenant id\"\r\n          />\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Select a format parameter supported by the broker. Default is 'options', which is supported by most brokers, but deprecated in the spec in favour of 'format'.\">\r\n              Format parameter\r\n            </InlineFormLabel>\r\n            <Select\r\n              options={[{value: \"options\", title: \"The legacy mode, supported by most browsers (default).\", label: \"options\"}, \r\n                {value: \"format\", title: \"The spec-conformant parameter, not yet widely supported.\", label: \"format\"}]}\r\n              value={jsonData.formatParameter || \"options\"}\r\n              onChange={this.onFormatParameterChange}\r\n              width={20}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Select temporal representation. Default: 'simplified', which compresses timeseries into an array of [value, timestamp] pairs.\">\r\n              Temporal representation\r\n            </InlineFormLabel>\r\n            <Select\r\n              options={[{value: \"simplified\", title: \"The default simplified mode, represents timeseries data efficiently as array of [value, timestamp] pairs.\", label: \"simplified\"}, \r\n                {value: \"expanded\", title: \"Represents timeseries data as array of property objects. Potentially inefficient for large arrays.\", label: \"expanded\"}]}\r\n              value={jsonData.avoidSimplifiedTemporalFormat ? \"expanded\" : \"simplified\"}\r\n              onChange={this.onTemporalRepChange}\r\n              width={20}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Select the access mode for the plugin, either sending requests to the broker through Grafana as a proxy (recommended), or directly from the browser to the broker. Note that user authentication is only supported in proxy mode.\">\r\n              Access\r\n            </InlineFormLabel>\r\n            <Select\r\n              options={[\r\n                {value: \"proxy\", title: \"Send broker requests via the backend (recommended)\", label: \"proxy\"},\r\n                {value: \"direct\", title: \"Send broker requests from the browser (not recommended)\", label: \"direct\"}\r\n              ]}\r\n              value={options.access || \"proxy\"}\r\n              onChange={this.onAccessModeChange}\r\n              width={20}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Select the NGSI-LD broker type. This is not too important, it only determines how the test request to check if the datasource is alive is formed.\">\r\n              Flavour\r\n            </InlineFormLabel>\r\n            <Select\r\n              options={[{value: \"generic\", title: \"Any NGSI-LD compatible broker\", label: \"generic\"}, {value: \"orion\", title: \"Orion-LD context broker\", label: \"orion\"}]}\r\n              value={options.jsonData?.flavour || \"generic\"}\r\n              onChange={this.onFlavourChange}\r\n              width={20}\r\n              />\r\n          </div>\r\n        </div>\r\n        {!isDirectMode &&\r\n          <React.Fragment>\r\n            <div className=\"gf-form-inline\">\r\n              <div className=\"gf-form\">\r\n                {/* @ts-ignore */} \r\n                <Checkbox\r\n                  checked={isAuthActive}\r\n                  onChange={c => this.onAuthStatusChange(c.currentTarget.checked)}\r\n                  label=\"Authentication active?\"\r\n                  title=\"If checked, OAuth 2.0 authentication will be enabled for the datasource. Use with a context broker secured by means of OAuth.\"\r\n                ></Checkbox>\r\n              </div>\r\n            </div>\r\n            {isAuthActive &&\r\n              <React.Fragment>\r\n                <div className=\"gf-form-inline\">\r\n                  <div className=\"gf-form\">\r\n                    <InlineFormLabel width={12} tooltip=\"OAuth token server\">\r\n                      OAuth token URL\r\n                    </InlineFormLabel>\r\n                    {/* @ts-ignore */} \r\n                    <Input\r\n                      value={jsonData.tokenUrl || \"\"}\r\n                      placeholder={\"https://my.auth.server.com/v1/oauth/token\"}\r\n                      onChange={evt => this.onTokenServerChange(evt.currentTarget.value?.trim())}\r\n                      title=\"OAuth token server.\"\r\n                    ></Input>\r\n                  </div>\r\n                </div>\r\n                <div className=\"gf-form-inline\">\r\n                  <div className=\"gf-form\">\r\n                    <InlineFormLabel width={12} tooltip=\"OAuth client id. This must be configured in the authentication server, too.\">\r\n                      Client id\r\n                    </InlineFormLabel>\r\n                    {/* @ts-ignore */} \r\n                    <Input\r\n                      value={secureJsonData?.clientId || \"\"}\r\n                      placeholder={authConfigured ? \"Value configured\" : \"No client id configured yet\"}\r\n                      onChange={evt => this.onClientIdChange(evt.currentTarget.value?.trim())}\r\n                      title=\"OAuth client id. This must be configured in the authentication server.\"\r\n                      type=\"password\"\r\n                    ></Input>\r\n                  </div>\r\n                </div>\r\n                <div className=\"gf-form-inline\">\r\n                  <div className=\"gf-form\">\r\n                    <InlineFormLabel width={12} tooltip=\"OAuth client secret. This must be configured in the authentication server, too.\">\r\n                      Client secret\r\n                    </InlineFormLabel>\r\n                    {/* @ts-ignore */} \r\n                    <Input\r\n                      value={secureJsonData?.clientSecret || \"\"}\r\n                      placeholder={authConfigured ? \"Value configured\" : \"No client secret configured yet\"}\r\n                      onChange={evt => this.onClientSecretChange(evt.currentTarget.value?.trim())}\r\n                      title=\"OAuth client secret. This must be configured in the authentication server, too.\"\r\n                      type=\"password\"\r\n                    ></Input>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            }\r\n          </React.Fragment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { SelectableValue } from '@grafana/data';\r\nimport { ColorPicker, InlineFormLabel, Input, Segment, SegmentAsync } from '@grafana/ui';\r\nimport { QueryEditor } from 'QueryEditor';\r\nimport React, { PureComponent, ReactNode } from 'react';\r\n\r\n// see https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/node-graph/\r\n\r\ninterface NodeGraphProps {\r\n  /**\r\n   * For the time being the editor only supports the default primary and secondary attributes\r\n   * \r\n   * Key \"\": default attributes\r\n   * Other keys: entity types\r\n   * Specific settings per type overwrite the default keys\r\n   */\r\n  primaryNodeAttributes?: Record<string, string[]>;\r\n  secondaryNodeAttributes?: Record<string, string[]>;\r\n  arcColorNodeAttributes?: Record<string, string[]>;\r\n  arcColorComplementLabel?: string;\r\n  primaryArcColor?: string;\r\n  secondaryArcColor?: string;\r\n  proposedAttributes?: Array<SelectableValue<string>>;\r\n  attributesChanged(kind: \"primary\"|\"secondary\"|\"arcColor\", attributes: Record<string, string[]>|undefined): void;\r\n  onColorChanged(primaryOrSecondary: boolean, color: string): void;\r\n  onArcColorComplementChanged(label?: string): void;\r\n}\r\n\r\n// a stateless subcomponent\r\nexport class GraphQueryEditor extends PureComponent<NodeGraphProps, Readonly<{}>> {\r\n\r\n\r\n  private attributeChanged(kind: \"primary\"|\"secondary\"|\"arcColor\", newValue?: string, oldValue?: any) {\r\n    newValue = newValue?.trim() || \"\";\r\n    oldValue = oldValue || \"\";\r\n    if (newValue === oldValue)\r\n      {return;}\r\n    let records = (this.props as any)[kind + \"NodeAttributes\"];\r\n    if (!records)\r\n      {records = {};}\r\n    else\r\n      {records = {...records};}\r\n    const attributes: any[] = \"\" in records ? records[\"\"] : [];\r\n    const idx: number = attributes.indexOf(oldValue);\r\n    if (idx < 0) {  \r\n      if (!newValue) \r\n        {return;}\r\n      attributes.push(newValue);\r\n    } else {\r\n      if (newValue) {\r\n        attributes.splice(idx, 1, newValue); // TODO convert value to numeric format?\r\n      } else {\r\n        attributes.splice(idx, 1);\r\n      }\r\n    }\r\n    records[\"\"] = [...new Set(attributes)];\r\n    this.props.attributesChanged(kind, records); // propogate to parent component\r\n  }\r\n\r\n  private selector(\r\n    kind: \"primary\"|\"secondary\"|\"arcColor\",\r\n    proposedValues?: Array<SelectableValue<string>>,\r\n    value?: string,\r\n  ): ReactNode {\r\n    \r\n    return (\r\n      <Segment<string>\r\n        value={QueryEditor.toOption(value || \"\")}\r\n        onChange={val => this.attributeChanged(kind, val.value, value)}\r\n        options={proposedValues || []}\r\n        inputMinWidth={6}\r\n        allowCustomValue\r\n      ></Segment>\r\n    );\r\n    // options={proposedValues?.map(val => QueryEditor.toOption(val)) || []}\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const {primaryNodeAttributes, secondaryNodeAttributes, arcColorNodeAttributes, primaryArcColor, secondaryArcColor, arcColorComplementLabel, proposedAttributes } = this.props;\r\n    const primaries: string[] = (primaryNodeAttributes && \"\" in primaryNodeAttributes ? primaryNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\r\n    const secondaries: string[] = (secondaryNodeAttributes && \"\" in secondaryNodeAttributes ? secondaryNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\r\n    const arcColors: string[] = (arcColorNodeAttributes && \"\" in arcColorNodeAttributes ? arcColorNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\r\n    const primaryElements: ReactNode[] = primaries.map(attribute => this.selector(\"primary\", proposedAttributes, attribute))\r\n    primaryElements.push(this.selector(\"primary\", proposedAttributes));\r\n    const secondaryElements: ReactNode[] = secondaries.map(attribute => this.selector(\"secondary\", proposedAttributes, attribute))\r\n    secondaryElements.push(this.selector(\"secondary\", proposedAttributes));\r\n    const arcColorElements: ReactNode[] = arcColors.map(attribute => this.selector(\"arcColor\", proposedAttributes, attribute))\r\n    arcColorElements.push(this.selector(\"arcColor\", proposedAttributes));\r\n    const primaryArcColor1 = primaryArcColor||\"green\";\r\n    const secondaryArcColor1 = secondaryArcColor||\"red\";\r\n    \r\n    const result = \r\n      <React.Fragment>\r\n        <h6>Graph settings</h6>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Primary attributes for node values\">\r\n              Primary node properties\r\n            </InlineFormLabel>\r\n            {primaryElements}\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Secondary attributes for node values; shown in a smaller font size below the primary values\">\r\n              Secondary node properties\r\n            </InlineFormLabel>\r\n            {secondaryElements}\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Attribute for coloring of node circles; must take values between 0 and 1.\">\r\n              Arc color properties\r\n            </InlineFormLabel>\r\n            {arcColorElements}\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Label for the complement of the selected arc color property\">\r\n              Arc color complement\r\n            </InlineFormLabel>\r\n            {/* @ts-ignore */} \r\n            <Input\r\n              value={arcColorComplementLabel}\r\n              onChange={evt => this.props.onArcColorComplementChanged(evt.currentTarget.value?.trim() || \"\")}\r\n            ></Input>\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Primary arc color. Only relevant if a property for the arc color is selected.\">\r\n              Primary arc color\r\n            </InlineFormLabel>\r\n            &nbsp;\r\n            <ColorPicker\r\n              color={primaryArcColor1}\r\n              onChange={color => this.props.onColorChanged(true, color)}\r\n            ></ColorPicker>\r\n            &nbsp; &nbsp; &nbsp;\r\n            <InlineFormLabel width={12} tooltip=\"Secondary arc color. Only relevant if a property for the arc color is selected.\">\r\n              Secondary arc color\r\n            </InlineFormLabel>\r\n            &nbsp;\r\n            <ColorPicker\r\n              color={secondaryArcColor1}\r\n              onChange={color => this.props.onColorChanged(false, color)}\r\n            ></ColorPicker>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>;\r\n    return result;\r\n  }\r\n\r\n}\r\n","\r\nexport interface AggregationPeriodBuilder {\r\n\r\n    build(): AggregationPeriod;\r\n\r\n    setSeconds(s: number): this;\r\n    setMinutes(s: number): this;\r\n    setHours(s: number): this;\r\n    setDays(s: number): this;\r\n    setMonths(s: number): this;\r\n    setYears(s: number): this;\r\n\r\n}\r\n\r\nclass AggregationPeriodBuilderImpl implements AggregationPeriodBuilder {\r\n\r\n    private _seconds = 0;\r\n    private _minutes = 0;\r\n    private _hours = 0;\r\n    private _days = 0;\r\n    private _months = 0;\r\n    private _years = 0;\r\n\r\n    private static _validate(s: number): number {\r\n        if (!isFinite(s))\r\n            {throw new Error(\"Invalid number \" + s);}\r\n        // TODO validate if integer?\r\n        return s;\r\n    }\r\n\r\n    // @ts-ignore\r\n    constructor(private readonly _build: (s, m, h, d, mn, y) => AggregationPeriod) {}\r\n\r\n    setSeconds(s: number): this {\r\n        this._seconds = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    setMinutes(s: number): this {\r\n        this._minutes = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    setHours(s: number): this {\r\n        this._hours = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    setDays(s: number): this {\r\n        this._days = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    setMonths(s: number): this {\r\n        this._months = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    setYears(s: number): this {\r\n        this._years = AggregationPeriodBuilderImpl._validate(s);\r\n        return this;\r\n    }\r\n\r\n    build(): AggregationPeriod {\r\n        return this._build(this._seconds, this._minutes, this._hours, this._days, this._months, this._years);\r\n    }\r\n\r\n}\r\n\r\nexport class AggregationPeriod {\r\n\r\n    private readonly _isEmpty: boolean;\r\n    private readonly _isTimePartEmpty: boolean;\r\n\r\n    private constructor(\r\n        private _seconds: number,\r\n        private _minutes: number,\r\n        private _hours: number,\r\n        private _days: number,\r\n        private _months: number,\r\n        private _years: number\r\n    ) {\r\n        this._isTimePartEmpty = [_seconds, _minutes, _hours].findIndex(n => n !== 0) < 0;\r\n        this._isEmpty = this._isTimePartEmpty  && [_days, _months, _years].findIndex(n => n !== 0) < 0;\r\n    }\r\n\r\n    static builder(other?: AggregationPeriod): AggregationPeriodBuilder {\r\n        // @ts-ignore\r\n        const builder = new AggregationPeriodBuilderImpl((s, m, h, d, mn, y) => new AggregationPeriod(s, m, h, d, mn, y));\r\n        if (other) {\r\n            builder.setSeconds(other._seconds);\r\n            builder.setMinutes(other._minutes);\r\n            builder.setHours(other._hours);\r\n            builder.setDays(other._days);\r\n            builder.setMonths(other._months);\r\n            builder.setYears(other._years);\r\n        }\r\n        return builder;\r\n    }\r\n\r\n    static deserialize(str?: string): AggregationPeriod|undefined {\r\n        if (!str)\r\n            {return undefined;}\r\n        try {\r\n            str = str.toUpperCase();\r\n            if (!str.startsWith(\"P\"))\r\n                {return undefined;}\r\n            const hasSeparator: boolean = str.indexOf(\"T\") > 0;\r\n            const builder: AggregationPeriodBuilder = AggregationPeriod.builder();\r\n            let startIdx = 0;\r\n            const yr: number = str.indexOf(\"Y\", startIdx);\r\n            if (yr > startIdx) {\r\n                builder.setYears(parseInt(str.substring(startIdx+1, yr), 10));\r\n                startIdx = yr;\r\n            }\r\n            const months = str.indexOf(\"M\", startIdx);\r\n            if (months > startIdx && (!hasSeparator || months < str.indexOf(\"T\", startIdx))) {\r\n                builder.setMonths(parseInt(str.substring(startIdx+1, months), 10));\r\n                startIdx = months;\r\n            }\r\n            const days = str.indexOf(\"D\", startIdx);\r\n            if (days > startIdx) {\r\n                builder.setDays(parseInt(str.substring(startIdx+1, days), 10));\r\n                startIdx = days;\r\n            }\r\n            if (hasSeparator)\r\n                {startIdx += 1;}\r\n            const hours = str.indexOf(\"H\", startIdx);\r\n            if (hours > startIdx) {\r\n                builder.setHours(parseInt(str.substring(startIdx+1, hours), 10));\r\n                startIdx = hours;\r\n            }\r\n            const minutes = str.indexOf(\"M\", startIdx);\r\n            if (minutes > startIdx && hasSeparator && minutes > str.indexOf(\"T\", startIdx)) {\r\n                builder.setMinutes(parseInt(str.substring(startIdx+1, minutes), 10));\r\n                startIdx = minutes;\r\n            }\r\n            const seconds = str.indexOf(\"S\", startIdx);\r\n            if (seconds > startIdx) {\r\n                builder.setSeconds(parseInt(str.substring(startIdx+1, seconds), 10));\r\n                startIdx = seconds;\r\n            }\r\n            return builder.build();\r\n        } catch (e) {\r\n            console.log(\"Invalid aggregation period\", str);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    // P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W\r\n    serialize(): string {\r\n        if (this._isEmpty)\r\n            {return \"PT0S\";}\r\n        let str = \"P\";\r\n        const attach = (arg: [number, string]): void => {\r\n            if (arg[0] !== 0)\r\n                {str += arg[0] + arg[1];}\r\n        };\r\n        ([([this._years, \"Y\"]), ([this._months, \"M\"]), ([this._days, \"D\"])] as Array<[number, string]>).forEach(attach);\r\n        if (!this._isTimePartEmpty)\r\n            {str += \"T\";}\r\n        ([([this._hours, \"H\"]), ([this._minutes, \"M\"]), ([this._seconds, \"S\"])] as Array<[number, string]>).forEach(attach);\r\n        return str;\r\n    }\r\n\r\n    seconds(): number {\r\n        return this._seconds;\r\n    }\r\n\r\n    minutes(): number {\r\n        return this._minutes;\r\n    }\r\n\r\n    hours(): number {\r\n        return this._hours;\r\n    }\r\n\r\n    days(): number {\r\n        return this._days;\r\n    }\r\n\r\n    months(): number {\r\n        return this._months;\r\n    }\r\n\r\n    years(): number {\r\n        return this._years;\r\n    }\r\n\r\n}\r\n","import { SelectableValue } from \"@grafana/data\";\r\nimport { InlineFormLabel, Input, MultiSelect, Segment } from \"@grafana/ui\";\r\nimport { AggregationPeriod, AggregationPeriodBuilder } from \"AggregationHelper\";\r\nimport React, { PureComponent, ReactNode } from 'react';\r\nimport { aggregationMethodForValue, TimeseriesAggregationMethod } from \"types\";\r\n\r\ninterface TsAggregationProps {\r\n\r\n    aggrMethod?: string;\r\n    aggrPeriodDuration?: string;\r\n    onAggregationMethodChanged(aggrMethod: TimeseriesAggregationMethod[]): void;\r\n    onAggregationPeriodChanged(aggrPeriodDuration: AggregationPeriod): void;\r\n}\r\n  \r\n\r\n// a stateless subcomponent\r\nexport class TsAggregationEditor extends PureComponent<TsAggregationProps, Readonly<{}>> {\r\n\r\n    private static readonly AGGREGATION_METHODS: Array<SelectableValue<TimeseriesAggregationMethod>> = [\r\n        {value: TimeseriesAggregationMethod.TOTAL_COUNT, label: \"Total count\", description: \"Number of points\", title: \"Number of points\"},\r\n        {value: TimeseriesAggregationMethod.DISTINCT_COUNT, label: \"Distinct count\", description: \"Number of distinct values\", title: \"Number of distinct values\"},\r\n        {value: TimeseriesAggregationMethod.SUM, label: \"Sum\", description: \"\", title: \"\"},\r\n        {value: TimeseriesAggregationMethod.AVERAGE, label: \"Average\", description: \"\", title: \"\"},\r\n        {value: TimeseriesAggregationMethod.MIN, label: \"Min\", description: \"\", title: \"\"},\r\n        {value: TimeseriesAggregationMethod.MAX, label: \"Max\", description: \"\", title: \"\"},\r\n        {value: TimeseriesAggregationMethod.STANDARD_DEVIATION, label: \"Standard deviation\", description: \"\", title: \"\"},\r\n        {value: TimeseriesAggregationMethod.SUM_SQUARE, label: \"Sum square\", description: \"Sum of squared valued\", title: \"Sum of squared valued\"},\r\n    ];\r\n\r\n    private methodsChanged(aggrMethod: Array<SelectableValue<TimeseriesAggregationMethod>>) {\r\n        this.props.onAggregationMethodChanged(aggrMethod.map(val => val.value).filter(m => m) as TimeseriesAggregationMethod[]);\r\n    }\r\n\r\n    private periodChanged(builder: AggregationPeriodBuilder, method: (s: number) => AggregationPeriodBuilder, value?: string) {\r\n        const number = parseInt(value||\"\", 10);\r\n        if (isFinite(number)) {\r\n            builder = method.bind(builder)(number);\r\n            this.props.onAggregationPeriodChanged(builder.build());\r\n        }\r\n    }\r\n\r\n    render(): ReactNode { \r\n        const {aggrMethod, aggrPeriodDuration} = this.props;\r\n        const aggrMethod1: TimeseriesAggregationMethod[] = (aggrMethod || \"\").split(\",\").map(m => m.trim()).map(aggregationMethodForValue).filter(m => m) as TimeseriesAggregationMethod[];\r\n        const period: AggregationPeriod = AggregationPeriod.deserialize(aggrPeriodDuration) || AggregationPeriod.builder().build();\r\n        const builder = AggregationPeriod.builder(period);\r\n        const elements = [\r\n          <div className=\"gf-form-inline\" key=\"aggrmethod\">\r\n            <div className=\"gf-form\">\r\n                <InlineFormLabel width={12} tooltip=\"Temporal aggregation of values. Deselect all to retrieve the original timeseries.\">\r\n                    Aggregation method\r\n                </InlineFormLabel>\r\n                <MultiSelect<TimeseriesAggregationMethod>\r\n                    options={TsAggregationEditor.AGGREGATION_METHODS}\r\n                    value={aggrMethod1}\r\n                    onChange={this.methodsChanged.bind(this)}\r\n                    width={20}\r\n                ></MultiSelect>\r\n            </div>\r\n          </div>\r\n        ];\r\n        if (aggrMethod1.length > 0) {\r\n            elements.push(\r\n                <div className=\"gf-form-inline\" key=\"aggrperiod\">\r\n                    <div className=\"gf-form\">\r\n                        <InlineFormLabel width={12} tooltip=\"Temporal aggregation duration. Set all entries to 0 to aggregate over the whole time interval.\">\r\n                            Aggregation period\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.years()}\r\n                            onChange={val => this.periodChanged(builder, builder.setYears, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Years\"\r\n                        ></Input>\r\n                        <InlineFormLabel width={2}>\r\n                            Y\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.months()}\r\n                            onChange={val => this.periodChanged(builder, builder.setMonths, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Months\"\r\n                        ></Input>\r\n                        <InlineFormLabel width={2}>\r\n                            M\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.days()}\r\n                            onChange={val => this.periodChanged(builder, builder.setDays, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Days\"\r\n                        ></Input>\r\n                        <InlineFormLabel width={2}>\r\n                            DT\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.hours()}\r\n                            onChange={val => this.periodChanged(builder, builder.setHours, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Hours\"\r\n                        ></Input>\r\n                        <InlineFormLabel  width={2}>\r\n                            H\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.minutes()}\r\n                            onChange={val => this.periodChanged(builder, builder.setMinutes, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Minutes\"\r\n                        ></Input>\r\n                        <InlineFormLabel width={2}>\r\n                            M\r\n                        </InlineFormLabel>\r\n                        {/* @ts-ignore */} \r\n                        <Input\r\n                            value={period.seconds()}\r\n                            onChange={val => this.periodChanged(builder, builder.setSeconds, val?.currentTarget?.value?.trim())}\r\n                            type=\"number\"\r\n                            width={5}\r\n                            title=\"Seconds\"\r\n                        ></Input>\r\n                        <InlineFormLabel width={2}>\r\n                            S\r\n                        </InlineFormLabel>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        const frag = <React.Fragment>\r\n            <h6>Temporal aggregation</h6>\r\n            {elements}\r\n        </React.Fragment>\r\n        return frag;\r\n    }\r\n\r\n\r\n}\r\n","import { SelectableValue } from '@grafana/data';\r\nimport { InlineFormLabel, Input, Segment, Select } from '@grafana/ui';\r\nimport React, { PureComponent, ReactNode } from 'react';\r\nimport { georelFromValue, GeorelProperty } from 'types';\r\n\r\n/**\r\n * Examples of valid geo queries:\r\n *   - ?georel=near;maxDistance==2000&geometry=Point&coordinates=[8,40]\r\n *   - near;maxDistance==2000\r\n *   - \r\n * \r\n */\r\n interface GeoParamsProps {\r\n\r\n /**\r\n  * Filter for geometric properties.\r\n  * Geo relationship as per clause 4.10.\r\n  * Examples:\r\n  *  - near;maxDistance==2000 (in m; also minDistance)\r\n  *  - equals\r\n  *  - disjoint\r\n  *  - intersects\r\n  *  - within\r\n  *  - contains\r\n  *  - overlaps\r\n  */\r\n  georel?: string;\r\n  /**\r\n   * Filter for geometric properties.\r\n   * Geometry as per clause 4.10.\r\n   * Examples:\r\n   *   - Point, Polygon\r\n   */\r\n  geometry?: string;\r\n   /**\r\n    * Filter for geometric properties.\r\n    * Coordinates serialized as a string as per clause 4.10.\r\n    * Examples\r\n    *   - [8,40] (for Point)\r\n    *   - [[[100.0,0.0],[101.0,0.0],[101.0,1.0],[100.0,1.0],[100.0,0.0]]] (for Polygon)\r\n    */\r\n  coordinates?: string;\r\n  /**\r\n   * Filter for geometric properties. Default: \"location\". Typical examples:\r\n   *   - location\r\n   *   - observationSpace\r\n   *   - operationSpace\r\n   */\r\n  geoproperty?: string; \r\n  onGeoChanged(geo: {georel?: string, geometry?: string, coordinates?: string, geoproperty?: string}): void;\r\n}\r\n\r\nenum DistanceType {\r\n  MAX_DISTANCE = \"maxDistance\",\r\n  MIN_DISTANCE = \"minDistance\"\r\n}\r\n\r\n\r\nexport class GeoParamsEditor extends PureComponent<GeoParamsProps, Readonly<{}>> {\r\n\r\n  private static readonly DISTANCE_OPTIONS: Array<SelectableValue<DistanceType>> = [\r\n    {value: DistanceType.MAX_DISTANCE, label: \"max radius\", description: \"Maximum distance from specified point\", title: \"Maximum distance from specified point (the default)\"},\r\n    {value: DistanceType.MIN_DISTANCE, label: \"min radius\", description: \"Minimum distance from specified point\", title: \"Minimum distance from specified point \"},\r\n  ];\r\n\r\n  private static readonly GEOREL_OPTIONS: Array<SelectableValue<GeorelProperty>> = [\r\n    {value: GeorelProperty.NONE, label: \"none\", description: \"Disable geo filters\", title: \"Disable geo filters\"},\r\n    {value: GeorelProperty.NEAR, label: \"near\", description: \"Specify a radius for the included points\", title: \"Specify a radius for the included points\"},\r\n    {value: GeorelProperty.EQUALS, label: \"equals\", description: \"Geometries must match exactly\", title: \"Geometries must match exactly\"},\r\n    {value: GeorelProperty.DISJOINT, label: \"disjoint\", description: \"Geometry must lie outside the specified one\", title: \"Geometry must lie outside the specified one\"},\r\n    {value: GeorelProperty.INTERSECTS, label: \"intersects\", description: \"Geometry must intersect the specified one; shared borders are sufficient\", title: \"Geometry must intersect the specified one; shared borders are sufficient\"},\r\n    {value: GeorelProperty.WITHIN, label: \"within\", description: \"Geometries must lie within the specified one\", title: \"Geometries must lie within the specified one\"},\r\n    {value: GeorelProperty.CONTAINS, label: \"contains\", description: \"Geometries must contain the specified one\", title: \"Geometries must contain the specified one\"},\r\n    {value: GeorelProperty.OVERLAPS, label: \"overlaps\", description: \"Geometry must overlap the specified one; does not match on shared borders\", title: \"Geometry must overlap the specified one; does not match on shared borders\"}, \r\n  ];\r\n\r\n  // note: these are just proposals, the user can enter other geometries\r\n  private static readonly GEOMETRY_OPTIONS: Array<SelectableValue<string>> = [\r\n    {value: \"Point\", label: \"Point\", description: \"A point specified by longitude and latitude\", title: \"A point specified by longitude and latitude\"},\r\n    {value: \"LineString\", label: \"LineString\", description: \"A line string specified by an array of points\", title: \"A line string specified by an array of points\"},\r\n    {value: \"Polygon\", label: \"Polygon\", description: \"A polygon specified by an array of line strings\", title: \"A polygon specified by an array of line strings\"},\r\n  ];\r\n\r\n  // note: these are just proposals, the user can enter other geometries\r\n  private static readonly GEOPROPERTY_OPTIONS: Array<SelectableValue<string>> = [\r\n    {value: \"location\", label: \"location\", description: \"The location of an entity (default)\", title: \"The location of an entity (default)\"},\r\n    {value: \"observationSpace\", label: \"observationSpace\", description: \"The location observed by an entity\", title: \"The location observed by an entity\"},\r\n    {value: \"operationSpace\", label: \"operationSpace\", description: \"The location in which an entity is active\", title: \"The location in which an entity is active\"},\r\n  ];\r\n\r\n  private static buildGeorel(oldGeorel: string|undefined, options: {newType?: GeorelProperty, newDistance?: number, newDistanceType?: DistanceType}): string {\r\n    const type: GeorelProperty = georelFromValue(options.newType || oldGeorel);\r\n    if (type === GeorelProperty.NONE)\r\n      {return \"\";}\r\n    if (type !== GeorelProperty.NEAR)\r\n      {return type.valueOf();}\r\n    let distance = options.newDistance;\r\n    if (distance === undefined) {\r\n      const lastEq: number = oldGeorel?.lastIndexOf(\"==\")||-1;\r\n      distance = lastEq > 0 ? parseFloat(oldGeorel?.substring(lastEq+2)?.trim()!) : 20_000;\r\n    } \r\n    if (!(distance > 0))\r\n      {distance = 20_000;}\r\n    let distType: DistanceType|undefined = options.newDistanceType;\r\n    if (distType === undefined) {\r\n      const firstSem: number = oldGeorel?.indexOf(\";\")||-1;\r\n      const eq: number = oldGeorel?.lastIndexOf(\"==\")||-1;\r\n      if (firstSem > 0 && eq > 0 && oldGeorel?.substring(firstSem+1, eq).trim().toLowerCase() === \"mindistance\")\r\n        {distType = DistanceType.MIN_DISTANCE;}\r\n      else\r\n        {distType = DistanceType.MAX_DISTANCE;}\r\n    }\r\n    return \"near;\" + distType.valueOf() + \"==\" + distance;\r\n  } \r\n\r\n  private georelChanged(georel: GeorelProperty|undefined) {\r\n    if (!georel)\r\n      {georel = GeorelProperty.NONE;}\r\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newType: georel}), onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  private distanceTypeChanged(value: DistanceType|undefined) {\r\n    if (!value)\r\n      {value = DistanceType.MAX_DISTANCE;}\r\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newDistanceType: value}), onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  private distanceChanged(value: number|undefined) {\r\n    if (!(value! > 0))\r\n      {value = 20_000;}\r\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newDistance: value}), onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  // TODO some sort of client side validation\r\n  private geometryChanged(value: string|undefined) {\r\n    const vals = {...this.props, geometry: value, onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  private geopropertyChanged(value: string|undefined) {\r\n    const vals = {...this.props, geoproperty: value, onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  private coordinatesChanged(coords: string|undefined) {\r\n    const vals = {...this.props, coordinates: coords, onGeoChanged: undefined};\r\n    this.props.onGeoChanged(vals as any);\r\n  }\r\n\r\n  render(): ReactNode { \r\n    const {georel, geometry, coordinates, geoproperty} = this.props;\r\n\r\n    const georelType: GeorelProperty = georelFromValue(georel);\r\n    const georelFilter = <React.Fragment>\r\n        <h6>Geo filters</h6>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Specify the geo filter to apply (georel property)\">\r\n              Geo relation filter\r\n            </InlineFormLabel>\r\n            <Select<GeorelProperty>\r\n              options={GeoParamsEditor.GEOREL_OPTIONS}\r\n              value={georelType}\r\n              onChange={val => this.georelChanged(val?.value)}\r\n              width={20}\r\n              ></Select>\r\n          </div>\r\n        </div>\r\n      </React.Fragment> ;\r\n    if (georelType === GeorelProperty.NONE)\r\n      {return georelFilter;}\r\n    let nearTypeFilters = <React.Fragment></React.Fragment>\r\n    if (georelType === GeorelProperty.NEAR) {\r\n      const isMinDistance: boolean = georel?.indexOf(\"min\")! > 0;\r\n      let distance: number = georel?.indexOf(\"==\")! > 0 ? parseFloat(georel?.substring(georel?.lastIndexOf(\"==\") + 2)!) : 20_000;\r\n      if (!(distance > 0))\r\n        {distance = 20_000}\r\n      nearTypeFilters = <React.Fragment>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"Distance in meters from specified center\">\r\n              Distance (m)\r\n            </InlineFormLabel>\r\n            {/* @ts-ignore */} \r\n            <Input \r\n              value={distance}\r\n              onChange={evt => this.distanceChanged(parseFloat(evt.currentTarget?.value?.trim()))}\r\n              type=\"number\"\r\n              width={12}\r\n              title=\"Distance in meters\"\r\n            ></Input>\r\n            <Select<DistanceType>\r\n              options={GeoParamsEditor.DISTANCE_OPTIONS}\r\n              value={isMinDistance ? DistanceType.MIN_DISTANCE : DistanceType.MAX_DISTANCE}\r\n              onChange={val => this.distanceTypeChanged(val?.value)}\r\n              width={20}\r\n              ></Select>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    }\r\n    \r\n    return <React.Fragment>\r\n      {georelFilter}\r\n      {nearTypeFilters}\r\n      <div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <InlineFormLabel width={12} tooltip=\"Specify the geo filter to apply (georel property)\">\r\n            Geo relation filter\r\n          </InlineFormLabel>\r\n          <Segment<string>\r\n              value={geometry || \"Point\"}\r\n              onChange={geo => this.geometryChanged(geo?.value)}\r\n              options={GeoParamsEditor.GEOMETRY_OPTIONS}\r\n              inputMinWidth={12}\r\n              allowCustomValue\r\n            ></Segment>\r\n        </div>\r\n      </div>\r\n      <div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <InlineFormLabel width={12} tooltip=\"Specify coordinates \">\r\n            Coordinates\r\n          </InlineFormLabel>\r\n          {/* @ts-ignore */} \r\n          <Input\r\n              value={coordinates || \"\"}\r\n              onChange={evt => this.coordinatesChanged(evt.currentTarget?.value?.trim())}\r\n              width={12}\r\n              placeholder=\"[8,40]\"\r\n              type=\"text\"\r\n            ></Input>\r\n        </div>\r\n      </div>\r\n      <div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <InlineFormLabel width={12} tooltip=\"Specify the geo property (geoproperty)\">\r\n            Geo property\r\n          </InlineFormLabel>\r\n          <Segment<string>\r\n              value={geoproperty||\"location\"}\r\n              onChange={geo => this.geopropertyChanged(geo?.value)}\r\n              options={GeoParamsEditor.GEOPROPERTY_OPTIONS}\r\n              inputMinWidth={12}\r\n              allowCustomValue\r\n            ></Segment>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n\r\n  }\r\n\r\n}\r\n","import defaults from 'lodash/defaults';\r\n\r\nimport React, { ChangeEvent, PureComponent } from 'react';\r\nimport { InlineFormLabel, Segment, MultiSelect, Checkbox, Select, Input } from '@grafana/ui';\r\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\r\nimport { NgsildDataSource } from './datasource';\r\nimport { defaultQuery, NgsildSourceOptions, NgsildQuery, NgsildQueryType, queryTypeForValue, TimeseriesAggregationMethod, NamePattern, namePatternFromValue } from './types';\r\nimport {  Entity, EntityType, INVALID_ATTRIBUTES, TemporalPropertyKey } from 'ngsildTypes';\r\nimport { GraphQueryEditor } from 'components/GraphQueryEditor';\r\nimport { TsAggregationEditor } from 'components/TimeseriesAggregationEditor';\r\nimport { AggregationPeriod } from 'AggregationHelper';\r\nimport { GeoParamsEditor } from 'components/GeoParamsEditor';\r\n\r\ntype Props = QueryEditorProps<NgsildDataSource, NgsildQuery, NgsildSourceOptions>;\r\n\r\n// contains available options; samples for the recommender system\r\ninterface QueryState {\r\n  types?: EntityType[];\r\n  entityIdsByType?: Record<string, string[]>;\r\n  attributesByEntityId?: Record<string, string[]>;\r\n  attributes?: string[];\r\n}\r\n\r\n/**\r\n * TODO\r\n *   - downsampling option (enabled by default?)\r\n */\r\nexport class QueryEditor extends PureComponent<Props, QueryState> {\r\n\r\n  private static readonly EMPTY_OPTION_ID: string = \"__EMPTY__\";\r\n  private static readonly EMPTY_OPTION: SelectableValue<string> = Object.freeze({name: QueryEditor.EMPTY_OPTION_ID, label: \"\"});\r\n  private static readonly QUERY_TYPES: Array<SelectableValue<NgsildQueryType>> = [\r\n    {value: NgsildQueryType.TEMPORAL, label: \"temporal\", description: \"Timeseries request\", title: \"Temporal queries target timeseries data, commonly used in graph plots\"},\r\n    {value: NgsildQueryType.ENTITY, label: \"current value\", description: \"Current value request\", title: \"Query the current value of one or multiple entity attributes\"},\r\n    {value: NgsildQueryType.GEO, label: \"geo\", description: \"Geo request\", title: \"Query the location of entities, useful for map visualizations\"},\r\n    {value: NgsildQueryType.NODE_GRAPH, label: \"node graph\", description: \"Node graph request\", title: \"Retrieve a directed graph dataset for the node graph panel\"},\r\n  ];\r\n  private static readonly NAMING_PATTERNS: Array<SelectableValue<NamePattern>> = [\r\n    {value: NamePattern.ENTITY_PLUS_ATTRIBUTE, label: \"Entity plus attribute\", description: \"Entity name plus attribute\",\r\n            title: \"The datapoint label is composed of the entity name + \\\":\\\" + the attribute name.\" },\r\n    {value: NamePattern.ENTITY_NAME, label: \"Entity\", description: \"Entity name\",\r\n            title: \"The datapoint label is given by the entity name.\" },\r\n    {value: NamePattern.ATTRIBUTE, label: \"Attribute\", description: \"Attribute name\",\r\n            title: \"The datapoint label is given by the attribute name.\" },\r\n  ];\r\n  private static readonly TEMPORAL_PROPERTIES: Array<SelectableValue<TemporalPropertyKey>> = [\r\n    {value: \"observedAt\", label: \"observedAt\", description: \"observedAt, the default measurement timestamp.\", title: \"This is usually the best choice, representing e.g. the measurment timestamp.\"},\r\n    {value: \"createdAt\", label: \"createdAt\", description: \"Creation timestamp.\", title: \"Creation timestamp of the entry.\"},\r\n    {value: \"modifiedAt\", label: \"modifiedAt\", description: \"Modification timestamp\", title: \"Timestamp of last modification.\"},\r\n    {value: \"deletedAt\", label: \"deletedAt\", description: \"Deletion timestamp\", title: \"Deletion timestamp of the entry.\"},\r\n  ];\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.loadData();\r\n  }\r\n\r\n  private loadData(): Promise<unknown> { // initial recommendations\r\n    const prom1 = this.props.datasource.request({queryType: NgsildQueryType.TYPES}) // TODO limit?\r\n      .then((types: EntityType[]) => {\r\n        types.forEach(type => {\r\n          const idx: number = type.typeName?.lastIndexOf(\".\");\r\n          type.shortName = idx >= 0 && idx < type.typeName.length-1 ? type.typeName.substring(idx+1) : type.typeName;\r\n        });\r\n        return new Promise<EntityType[]>(resolve => this.setState({ types: types }, () => resolve(types)));\r\n      });\r\n    const prom2 = this.props.datasource.request({queryType: NgsildQueryType.ATTRIBUTES})\r\n      .then((attributes: {attributeList: string[]}) => new Promise<void>(resolve => this.setState({ attributes: attributes.attributeList }, resolve)));\r\n    const prom3 = prom1.then(async (types: EntityType[]) => {\r\n      if (types.length > 25)\r\n        {types = types.filter((_, idx) => idx<25);}\r\n      const type: string|undefined = types.length > 0 ? types.map(type => type.typeName).join(\",\") : undefined;\r\n      // TODO ideally, we'd like to retrieve samples for the different types\r\n      return this.loadEntities(this.props.datasource, type, 100);\r\n    });\r\n    return Promise.all([prom1, prom2, prom3]);\r\n  }\r\n\r\n  private async loadEntities(datasource: NgsildDataSource, type?: string, limit?: number) {\r\n    if (!type)\r\n      {return;}\r\n    const typeEntitiesLoaded: boolean = !!this.state?.entityIdsByType && type in this.state.entityIdsByType;\r\n    if (typeEntitiesLoaded)\r\n      {return;}\r\n    const entities: Entity[] = \r\n        await datasource.request({queryType: NgsildQueryType.ENTITY, entityType: type}, {limit: limit||25});\r\n    if (entities.length === 0)\r\n      {return;}\r\n    const entitiesByType: Record<string, string[]> = \r\n        this.state?.entityIdsByType ? {...this.state.entityIdsByType} : {};      \r\n    entitiesByType[type] = entities.map(entity => entity.id);\r\n    const attributesById = \r\n        this.state?.attributesByEntityId ? {...this.state.attributesByEntityId} : {};\r\n    const attributesForEntity = (entity: Entity): string[] => Object.entries(entity).filter(([key, value]) => {\r\n      if (INVALID_ATTRIBUTES.indexOf(key) >= 0)\r\n        {return false;}\r\n      if (!value.value || !isFinite(value.value as any))\r\n        {return false;}\r\n      return true;\r\n    }).map(([key, _]) => key);\r\n    const newAttributesByIds = Object.fromEntries(entities.map(entity => [entity.id, attributesForEntity(entity)]));\r\n    Object.assign(attributesById, newAttributesByIds);\r\n    return new Promise<void>(resolve => this.setState({entityIdsByType: entitiesByType, attributesByEntityId: attributesById}, resolve));\r\n  }\r\n\r\n  private async loadAttributes(datasource: NgsildDataSource, entityId?: string) {\r\n    if (!entityId)\r\n      {return;}\r\n    const attributesLoaded: boolean = !!this.state?.attributesByEntityId && entityId in this.state.attributesByEntityId;\r\n    if (attributesLoaded)\r\n      {return;}\r\n    const entity: Entity = await datasource.request({queryType: NgsildQueryType.ENTITY, entityId: entityId});\r\n    if (!entity)\r\n      {return;}\r\n    const attrs: string[] = Object.keys(entity).filter(attr => INVALID_ATTRIBUTES.indexOf(attr) < 0)\r\n    if (attrs.length === 0)\r\n      {return;}\r\n    const attrsByEntity: Record<string, string[]> = \r\n      this.state?.attributesByEntityId ? {...this.state.attributesByEntityId} : {};\r\n    attrsByEntity[entityId] = attrs;\r\n    this.setState({ attributesByEntityId: attrsByEntity });\r\n  }\r\n\r\n  /*\r\n  onMeasurementChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { onChange, query, onRunQuery } = this.props;\r\n    onChange({ ...query, measurement: event.target.value?.trim() });\r\n    // executes the query\r\n    //onRunQuery();\r\n  };\r\n  */\r\n\r\n  static toOption<T>(value: T): SelectableValue<string> {\r\n    // @ts-ignore\r\n    const id: string = value.id || value.name || value + \"\";\r\n      // @ts-ignore\r\n    const name = value.name || id;\r\n    // @ts-ignore\r\n    const title: string|undefined = value.description || undefined;\r\n    return {\r\n      value: id,\r\n      label: name,\r\n      description: title,\r\n      title: title\r\n    };\r\n    //return this.props.datasource.uiSegmentSrv.getSegmentForValue(value);\r\n  }\r\n\r\n  getEntityTypes(): Array<SelectableValue<string>> {\r\n    if (!this.state?.types) {\r\n      return [];\r\n    }\r\n    const types = this.state.types\r\n      .map(type => {return {id: type.typeName, name: type.shortName, description: type.typeName};})\r\n      .map(QueryEditor.toOption)\r\n      .sort();\r\n    types.unshift(QueryEditor.EMPTY_OPTION);\r\n    return types;\r\n  }\r\n\r\n  getEntityIds(entityType?: string): Array<SelectableValue<string>> {\r\n    if (!this.state?.entityIdsByType)\r\n      {return [];}\r\n    if (!entityType) {\r\n      const result: Array<SelectableValue<string>> = [];\r\n      const entities: string[][] = Object.values(this.state.entityIdsByType);\r\n      const maxLength: number = entities.reduce((m, a2) => Math.max(m, a2.length), 0);\r\n      let cnt = 0;\r\n      outer: for (let arrIdx=0; arrIdx<maxLength; arrIdx++) {\r\n        for (let idx=0; idx<entities.length; idx++) {\r\n          const arr = entities[idx];\r\n          if (arrIdx < arr.length) {\r\n            result.push(QueryEditor.toOption(arr[arrIdx]))\r\n            if (cnt++ > 50)\r\n              {break outer;}\r\n          }\r\n        }\r\n      }\r\n      if (result.length > 0)\r\n        {result.unshift(QueryEditor.EMPTY_OPTION);}\r\n      return result;\r\n    }\r\n    if (this.state?.entityIdsByType && entityType in this.state.entityIdsByType) {\r\n      const arr = this.state.entityIdsByType[entityType].map(QueryEditor.toOption);\r\n      if (arr.length > 0)\r\n        {arr.unshift(QueryEditor.EMPTY_OPTION);}\r\n      return arr;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getAttributes(entityType?: string, entityId?: string, queryType?: NgsildQueryType, addEmpty?: boolean): Array<SelectableValue<string>> {\r\n    const attribs = this.getAttributesInternal(entityType, entityId, queryType);\r\n    if (addEmpty && attribs.length > 0)\r\n      {attribs.unshift(QueryEditor.EMPTY_OPTION);}\r\n    return attribs;\r\n  }\r\n\r\n  private getEntityNameFields(entityType?: string, entityId?: string) {\r\n    const attributes: Array<SelectableValue<string>> = this.getAttributes(entityType, entityId);\r\n    const nameIdx = attributes.findIndex(v => v.value === \"name\");\r\n    if (nameIdx > 0) {\r\n      const nameSelection = attributes.splice(nameIdx, 1);\r\n      attributes.unshift(nameSelection[0]);\r\n    }     \r\n    attributes.unshift({value: \"id\", label: \"id\", description: \"Entity id\", title: \"Use the entity id as the entity name.\"});\r\n    attributes.unshift({value: \"id_short\", label: \"id (short)\", description: \"Short entity id\", title: \"Use the short form of the entity id as the entity name.\"});\r\n    return attributes;\r\n  }\r\n\r\n  private getAttributesInternal(entityType?: string, entityId?: string, queryType?: NgsildQueryType): Array<SelectableValue<string>> {\r\n    if (queryType === NgsildQueryType.NODE_GRAPH) {  //  in the case of graph queries we should display all available attributes // TODO maybe show those applicable to entity type first?\r\n      if (this.state?.attributes?.length! > 0)\r\n        {return this.state.attributes!.map(QueryEditor.toOption).sort();}\r\n      if (this.state?.attributesByEntityId) {\r\n        return [...new Set(Object.values(this.state.attributesByEntityId).flatMap(arr => arr))].map(QueryEditor.toOption).sort();\r\n      }\r\n    }\r\n    if (entityId && this.state?.attributesByEntityId && entityId in this.state.attributesByEntityId)\r\n        {return this.state.attributesByEntityId[entityId].map(QueryEditor.toOption).sort();}\r\n    if (entityType) {\r\n      const types: EntityType[]|undefined = \r\n        entityType ? this.state?.types?.filter(type => type.typeName === entityType) : undefined;\r\n      if (types)\r\n        {return [... new Set(types.flatMap((x) => x.attributeNames))].map(QueryEditor.toOption).sort();}\r\n    }\r\n    return (this.state?.attributes || []).map(QueryEditor.toOption).sort();\r\n  }\r\n\r\n  onEntityTypeChange = (event: SelectableValue<string>) => {\r\n    const { onChange, query, datasource } = this.props;\r\n    let type: string = event.value?.trim() || \"\";\r\n    if (type === QueryEditor.EMPTY_OPTION_ID)\r\n      {type = \"\";}\r\n    this.loadEntities(datasource, type);\r\n    if (type)\r\n      {onChange({ ...query, entityType: type, entityId: undefined, attributes: undefined });}\r\n    else\r\n      {onChange({ ...query, entityType: type });}\r\n  };\r\n\r\n  onEntityNameFieldChange = (event: SelectableValue<string>) => {\r\n    const { onChange, query } = this.props;\r\n    const name = event.value?.trim() || \"id_short\";\r\n    onChange({...query, entityName: name});\r\n  }\r\n\r\n\r\n  onAttributeChange = (event: Array<SelectableValue<string>>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, attributes: event.map(e => {\r\n      let attr: string = e.value?.trim() || \"\";\r\n      if (attr === QueryEditor.EMPTY_OPTION_ID)\r\n        {attr = \"\";}\r\n      return attr;\r\n    }).filter(e => e)});\r\n  };\r\n\r\n  onQueryTypeChange = (event: SelectableValue<NgsildQueryType>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, queryType: event?.value?.valueOf()||\"\"});\r\n  };\r\n\r\n  onEntityIdChange = (event: SelectableValue<string>) => {\r\n    let id: string = event.value?.trim() || \"\"; \r\n    if (id === QueryEditor.EMPTY_OPTION_ID)\r\n      {id = \"\";}\r\n    const { onChange, query, datasource } = this.props;\r\n    this.loadAttributes(datasource, id);\r\n    if (id) \r\n      {onChange({ ...query, entityId: id, attributes: [] });} // TODO keep attributes selected that are applicable to the entity at hand?\r\n    else\r\n      {onChange({ ...query, entityId: id });}\r\n\r\n  };\r\n\r\n  onTemporalPropertyChange = (event: SelectableValue<TemporalPropertyKey>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, timeProperty: event?.value?.valueOf() as TemporalPropertyKey || \"observedAt\"});\r\n  };\r\n\r\n  onCustomQueryChange = (q: string|undefined) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, customQuery: q?.trim() || \"\"});\r\n  };\r\n\r\n  onScopeQueryChange = (q: string|undefined) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, scopeQuery: q?.trim() || \"\"});\r\n  };\r\n\r\n  onLongEntityNameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, useLongEntityName: event.currentTarget.checked });\r\n  };\r\n\r\n  onNamePatternChange = (event: SelectableValue<NamePattern>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, namePattern: event?.value?.valueOf() || NamePattern.ENTITY_PLUS_ATTRIBUTE.valueOf()});\r\n  };\r\n\r\n  onGraphAttributesChanged = (kind: \"primary\"|\"secondary\"|\"arcColor\", attributes: Record<string, string[]>|undefined) => {\r\n    const { onChange, query } = this.props;\r\n    const key: string = kind + \"NodeAttributes\";\r\n    onChange({...query, [key]: attributes });\r\n  }\r\n  \r\n  onGraphColorChanged = (primaryOrSecondary: boolean, color?: string) => {\r\n    const { onChange, query } = this.props;\r\n    const key: string = (primaryOrSecondary ? \"primary\" : \"secondary\") + \"ArcColor\";\r\n    onChange({...query, [key]: color });\r\n  }\r\n\r\n  onArcColorComplementChanged = (label?: string) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({...query, arcColorComplementLabel: label });\r\n  }\r\n\r\n  onAggregationMethodChanged = (aggrMethod: TimeseriesAggregationMethod[]) => {\r\n    const { onChange, query } = this.props;\r\n    const serialized: string|undefined = aggrMethod.length > 0 ? aggrMethod.map(m => m.valueOf()).join(\",\")  : undefined;\r\n    onChange({...query, aggrMethod: serialized });\r\n  }\r\n\r\n  onAggregationPeriodChanged = (aggrPeriod: AggregationPeriod) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({...query, aggrPeriodDuration: aggrPeriod.serialize() });\r\n  }\r\n\r\n  onGeoChanged = (geo: {georel?: string, geometry?: string, coordinates?: string, geoproperty?: string}) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({...query, georel: geo?.georel, geometry: geo?.geometry||\"Point\", coordinates: geo?.coordinates, geoproperty: geo?.geoproperty||\"location\" });\r\n  }\r\n\r\n  render() {\r\n    const query = defaults(this.props.query, defaultQuery);\r\n    const { entityId, entityType, attributes, namePattern, entityName, useLongEntityName, queryType, customQuery, scopeQuery } = query;\r\n    const queryType0: NgsildQueryType = queryTypeForValue(queryType)!;\r\n    const namePattern0: NamePattern = namePatternFromValue(namePattern)\r\n    const entityName0: string = !!entityName ? entityName : (useLongEntityName ? \"id\" : \"id_short\");\r\n    let namePatternSelector = <React.Fragment></React.Fragment>;\r\n    if (queryType !== NgsildQueryType.NODE_GRAPH && queryType !== NgsildQueryType.GEO) {\r\n      namePatternSelector = <div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <InlineFormLabel width={12} tooltip=\"Select the naming pattern for the datapoints\">\r\n            Naming pattern\r\n          </InlineFormLabel>              \r\n          <Select<NamePattern>\r\n            options={QueryEditor.NAMING_PATTERNS}\r\n            value={namePattern0}\r\n            onChange={this.onNamePatternChange}\r\n            width={22}\r\n            ></Select>\r\n        </div>\r\n      </div>;\r\n    }\r\n    let entityNameFieldSelector = <React.Fragment></React.Fragment>;\r\n    if (namePattern0 !== NamePattern.ATTRIBUTE || queryType === NgsildQueryType.NODE_GRAPH || queryType === NgsildQueryType.GEO) {\r\n      entityNameFieldSelector = <\r\n        div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <InlineFormLabel width={12} tooltip=\"Select the attribute that determines the entity name.\">\r\n            Entity name\r\n          </InlineFormLabel>              \r\n          <Segment<string>\r\n            value={entityName0 || \"\"}\r\n            onChange={this.onEntityNameFieldChange}\r\n            options={this.getEntityNameFields(entityType)}\r\n            inputMinWidth={20}\r\n            allowCustomValue\r\n          ></Segment>\r\n        </div>\r\n      </div>;\r\n    }\r\n    let graphEditor = <React.Fragment></React.Fragment>;\r\n    if (queryType === NgsildQueryType.NODE_GRAPH) {\r\n      const {primaryNodeAttributes, secondaryNodeAttributes, arcColorNodeAttributes, primaryArcColor, secondaryArcColor, arcColorComplementLabel } = query;\r\n      graphEditor = <GraphQueryEditor\r\n          primaryNodeAttributes={primaryNodeAttributes}\r\n          secondaryNodeAttributes={secondaryNodeAttributes}\r\n          arcColorNodeAttributes={arcColorNodeAttributes}\r\n          arcColorComplementLabel={arcColorComplementLabel}\r\n          primaryArcColor={primaryArcColor}\r\n          secondaryArcColor={secondaryArcColor}\r\n          proposedAttributes={this.getAttributes(entityType, entityId, queryType, true)}\r\n          attributesChanged={this.onGraphAttributesChanged}\r\n          onColorChanged={this.onGraphColorChanged}\r\n          onArcColorComplementChanged={this.onArcColorComplementChanged}\r\n        ></GraphQueryEditor>;\r\n    }\r\n    let temporalAggregationEditor  = <React.Fragment></React.Fragment>;\r\n    if (queryType === NgsildQueryType.TEMPORAL) {\r\n        const {aggrMethod, aggrPeriodDuration }  = query;\r\n        temporalAggregationEditor = <TsAggregationEditor\r\n          aggrMethod={aggrMethod}\r\n          aggrPeriodDuration={aggrPeriodDuration}\r\n          onAggregationMethodChanged={this.onAggregationMethodChanged}\r\n          onAggregationPeriodChanged={this.onAggregationPeriodChanged}\r\n          ></TsAggregationEditor>\r\n    }\r\n    const {georel, geometry, geoproperty, coordinates} = query;\r\n    const geoEditor = <GeoParamsEditor\r\n      georel={georel}\r\n      geometry={geometry}\r\n      geoproperty={geoproperty}\r\n      coordinates={coordinates}\r\n      onGeoChanged={this.onGeoChanged}\r\n    ></GeoParamsEditor>\r\n    return (\r\n      <div style={{display: \"flex\", columnGap: \"1.5em\", rowGap: \"1em\", flexWrap: \"wrap\"}}>\r\n        <div>\r\n          <h6>Basic settings and filters</h6>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel width={12} tooltip=\"Query type\">\r\n                Query type\r\n              </InlineFormLabel>\r\n              <Select<NgsildQueryType>\r\n                options={QueryEditor.QUERY_TYPES}\r\n                value={queryType0}\r\n                onChange={this.onQueryTypeChange}\r\n                width={22}\r\n                ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel width={12} tooltip=\"Select the entity type\">\r\n                Entity type\r\n              </InlineFormLabel>\r\n              <Segment<string>\r\n                value={entityType || \"\"}\r\n                onChange={this.onEntityTypeChange}\r\n                options={this.getEntityTypes()}\r\n                inputMinWidth={12}\r\n                allowCustomValue\r\n              ></Segment>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel width={12} tooltip=\"Select the entity id\">\r\n                Entity id\r\n              </InlineFormLabel>              \r\n              <Segment<string>\r\n                value={entityId || \"\"}\r\n                onChange={this.onEntityIdChange}\r\n                options={this.getEntityIds(entityType)}\r\n                inputMinWidth={12}\r\n                allowCustomValue\r\n              ></Segment>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel width={12} tooltip=\"Attributes to include\">\r\n                Attributes\r\n              </InlineFormLabel>\r\n              <MultiSelect<string>\r\n                options={this.getAttributes(entityType, entityId, queryType0)}\r\n                value={attributes}\r\n                onChange={this.onAttributeChange}\r\n                width={22}\r\n                ></MultiSelect>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n            <InlineFormLabel width={12} tooltip=\"A query string conforming to the NGSI-LD query language, such as speed>50;brandName!='Mercedes'\">\r\n                Custom query\r\n              </InlineFormLabel>\r\n              {/* @ts-ignore */} \r\n              <Input\r\n                value={customQuery || \"\"}\r\n                onChange={evt => this.onCustomQueryChange(evt.currentTarget.value)}\r\n                type=\"string\"\r\n                placeholder={\"speed>50;brandName!=\\\"Mercedes\\\"\"}\r\n                width={22}\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel width={12} tooltip=\"A scope query string conforming to the NGSI-LD scope query language, such as '/Madrid/Centro,/Madrid/Cortes'. Formerly called Fiware-ServicePath.\">\r\n                Scope query\r\n              </InlineFormLabel>\r\n              {/* @ts-ignore */} \r\n              <Input\r\n                value={scopeQuery || \"\"}\r\n                onChange={evt => this.onScopeQueryChange(evt.currentTarget.value)}\r\n                type=\"string\"\r\n                placeholder={\"/Madrid/Centro,/Madrid/Cortes\"}\r\n                width={22}\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          {namePatternSelector}\r\n          {entityNameFieldSelector}\r\n          {queryType === NgsildQueryType.TEMPORAL && \r\n            <React.Fragment>\r\n              <div className=\"gf-form-inline\">\r\n              <div className=\"gf-form\">\r\n                <InlineFormLabel width={12} tooltip=\"Time property to query.\">\r\n                  Time property\r\n                </InlineFormLabel>\r\n                <Select<TemporalPropertyKey>\r\n                  options={QueryEditor.TEMPORAL_PROPERTIES}\r\n                  value={query.timeProperty || \"observedAt\"}\r\n                  onChange={this.onTemporalPropertyChange}\r\n                  width={22}\r\n                  ></Select>\r\n              </div>\r\n            </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>  \r\n        <div>\r\n          {geoEditor}\r\n        </div>  \r\n        <div>\r\n          {graphEditor}\r\n        </div>\r\n        <div>\r\n          {temporalAggregationEditor}\r\n        </div>\r\n      </div>\r\n    );\r\n    /*\r\n      deprecated:\r\n      <div className=\"gf-form-inline\">\r\n        <div className=\"gf-form\">\r\n          <Checkbox\r\n            value={useLongEntityName || false}\r\n            onChange={this.onLongEntityNameChange}\r\n            label=\"Long entity names\"\r\n            description=\"Show the fully qualified entity name?\"\r\n          />\r\n        </div>\r\n      </div>\r\n    */\r\n\r\n  }\r\n}\r\n","import { DataSourcePlugin } from '@grafana/data';\r\nimport { NgsildDataSource } from './datasource';\r\nimport { ConfigEditor } from './ConfigEditor';\r\nimport { QueryEditor } from './QueryEditor';\r\nimport { NgsildQuery, NgsildSourceOptions } from './types';\r\n\r\nexport const plugin = new DataSourcePlugin<NgsildDataSource, NgsildQuery, NgsildSourceOptions>(NgsildDataSource)\r\n  .setConfigEditor(ConfigEditor)\r\n  .setQueryEditor(QueryEditor);\r\n"],"names":["module","exports","value","type","Symbol","getRawTag","objectToString","symToStringTag","toStringTag","undefined","Object","freeGlobal","freeSelf","self","root","Function","baseGetTag","isObject","tag","g","other","isFunction","isLength","length","reIsUint","test","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","freeProcess","process","nodeUtil","types","require","binding","e","baseRest","eq","isIterateeCall","keysIn","objectProto","prototype","hasOwnProperty","defaults","object","sources","index","guard","source","props","propsIndex","propsLength","key","call","identity","overRest","setToString","func","start","apply","nativeMax","Math","max","transform","args","arguments","array","Array","otherArgs","this","thisArg","baseSetToString","shortOut","constant","defineProperty","string","getNative","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","funcToString","toString","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","result","uid","coreJsData","maskSrcKey","exec","keys","IE_PROTO","nativeNow","Date","now","count","lastCalled","stamp","remaining","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isArray","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","n","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","baseIsTypedArray","baseUnary","nodeIsTypedArray","typedArrayTags","isPrototype","nativeKeysIn","isProto","Ctor","constructor","__WEBPACK_EXTERNAL_MODULE__45__","__WEBPACK_EXTERNAL_MODULE__46__","__WEBPACK_EXTERNAL_MODULE__47__","__WEBPACK_EXTERNAL_MODULE__49__","__WEBPACK_EXTERNAL_MODULE__50__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","enumerable","get","globalThis","window","obj","prop","r","nmd","paths","children","NgsildQueryType","TimeseriesAggregationMethod","GeorelProperty","aggregationMethodForValue","method","toLowerCase","TOTAL_COUNT","DISTINCT_COUNT","SUM","AVERAGE","MIN","MAX","STANDARD_DEVIATION","SUM_SQUARE","NamePattern","georelFromValue","georel","NONE","startsWith","NEAR","EQUALS","DISJOINT","INTERSECTS","WITHIN","CONTAINS","OVERLAPS","namePatternFromValue","namePattern","ENTITY_NAME","ATTRIBUTE","ENTITY_PLUS_ATTRIBUTE","defaultQuery","queryType","TEMPORAL","valueOf","JsUtils","_classCallCheck","p1","p2","end","endsWith","substring","url","keyValue","sep","indexOf","units","CEL","KEL","MTR","CMT","DMT","MMT","KTM","KMT","C81","DD","D61","D62","C47","B98","C26","SEC","HUR","DAY","ANN","MTS","KMH","M62","MSK","M46","MGM","GRM","KGM","TNE","KTN","PAL","KPA","HBA","MBR","BAR","KBA","ATM","JOU","KJO","GV","WHR","KWH","MWH","GWH","A53","B29","B71","A85","C31","WTT","KWT","MAW","A90","D46","KVA","MVA","AMP","B22","COU","AMH","TAH","VLT","KVT","D50","D33","C29","OHM","E45","B49","B75","MTK","MTQ","LTR","MLT","HTZ","NEW","C62","KGS","MQS","MQH","B11","B43","BQL","property","_typeof","map","getValueWithUnit","v","isFinite","unit","unitCode","INVALID_ATTRIBUTES","freeze","GeoHandler","entities","query","allAttributes","flatMap","attributes","filter","attribute","fields","_toConsumableArray","Set","attr","name","values","longitude","latitude","names","forEach","entity","_getValue","location","field","coordinates","nameField","entityName","useLongEntityName","col","lastIndexOf","f","unshift","MutableDataFrame","refId","_regeneratorRuntime","t","i","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_createForOfIteratorHelper","_n","F","_arrayLikeToArray","from","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","Number","_toPrimitive","NodeGraphHandler","datasource","_handleGraphResult","_callee","maxGraphDepth","entityLabel","nodeIdField","nodeTitleField","nodeSubTitleField","nodeMainStatField","nodeSecondaryStatField","nodeArcField1","nodeArcField2","nodeArcFieldNeutral","getStatValue","setFieldConfig","edgeIdField","edgeSourceField","edgeTargetField","edgeMainStatField","_iterator","_step","_loop","nodeFields","nodes","edges","_this","_context2","resolveMissingEntities","FieldType","config","number","color","mode","fixedColor","statAttributes","options","selectedAttr","find","returnAttribute","skipUnit","primaryNodeAttributes","secondaryNodeAttributes","arcColorNodeAttributes","arcColorComplementLabel","primaryArcColor","secondaryArcColor","_this$query","_this$query2","_this$query3","label","dot","subtitle","arcStatValue","complementArcState","neutralArcState","_context","entries","_ref","_ref2","entity2","_ref3","_ref4","relationship","t1","findIndex","meta","preferredVisualisationType","_x","_x2","_resolveMissingEntities","_callee2","depthCnt","startIdx","missingEntities","idx","newEntities","newStartIdx","recursiveEntities","_args3","_context3","_ref5","_ref6","_ref7","_ref8","target","add","getEntites","_x3","_x4","_getEntites","_callee3","ids","entityId","additionalEntities","_context4","size","join","request","ENTITY","_x5","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","bind","_setPrototypeOf","_defineProperty","NgsildDataSource","_DataSourceApi","instanceSettings","_instanceSettings$jso","_instanceSettings$jso2","_instanceSettings$jso3","_instanceSettings$jso4","_instanceSettings$jso5","_instanceSettings$jso6","_instanceSettings$jso7","_instanceSettings$url","_instanceSettings$jso8","baseUrl","concatPaths","flavour","jsonData","tenant","trim","formatParameter","avoidSimplifiedTemporalFormat","actualTimeseriesUrl","timeseriesUrl","access","contextUrl","contextLinkHeader","_inherits","_query","backend","range","data0","frames","_this2","getBackendSrv","targets","_range$from","_range$to","querySingle","to","all","data","_querySingle","_query$attributes","results","_this3","entityType","GEO","handleGeoResult","NODE_GRAPH","handleGraphResult","invalidAttributes","_loop2","_i","_attributes","splice","attrName","time","timeProperty","_data","_field","_time","_field2","_time2","point","getTime","isNumber","observedAt","t0","_request","_query$attributes3","_query$scopeQuery","_query$scopeQuery$tri","_endpoint","endpoint","ngsildOptionsParam","hasComma","_query$attributes2","addAttributes","_query$attributes5","_query$attributes4","appendNumericParam","appendAll","sq","isVersionRequest","fetchOptions","result0","_context5","VERSION","TYPES","ATTRIBUTES","aggrMethod","appendQueryParam","aggrPeriodDuration","split","encodeURIComponent","_attributes2","arr","setTimeInterval","geometry","geoproperty","customQuery","params","_step2","_iterator2","err","scopeQuery","responseType","headers","Accept","Link","toPromise","fetch","_testDatasource","_callee4","_context6","hasFrom","hasTo","timerel","timeAt","toISOString","observable","reject","subscribe","response","ok","message","status","statusText","error","DataSourceApi","LegacyForms","SecretFormField","FormField","ConfigEditor","_PureComponent","_len","_key","concat","event","_event$currentTarget$","_this$props","onOptionsChange","_extends","currentTarget","_event$currentTarget$2","_this$props2","_event$currentTarget$3","_this$props3","newFormatParam","_this$props4","avoidSimplifiedRep","_this$props5","_event$currentTarget$4","_this$props6","_this$props7","_this$props8","active","_this$props9","authType","_this$props10","securejsonData","secureJsonData","clientId","_this$props11","clientSecret","_this$props12","tokenUrl","_options$jsonData","secureJsonFields","isDirectMode","isAuthActive","authConfigured","React","className","labelWidth","inputWidth","onChange","onUrlChange","placeholder","onTimeseriesUrlChange","onContextUrlChange","tooltip","onTenantChange","_InlineFormLabel","InlineFormLabel","width","Select","title","onFormatParameterChange","_InlineFormLabel2","onTemporalRepChange","_InlineFormLabel3","onAccessModeChange","_InlineFormLabel4","onFlavourChange","Checkbox","checked","onAuthStatusChange","_InlineFormLabel5","Input","evt","_evt$currentTarget$va","onTokenServerChange","_InlineFormLabel6","_evt$currentTarget$va2","onClientIdChange","_InlineFormLabel7","_evt$currentTarget$va3","onClientSecretChange","PureComponent","GraphQueryEditor","kind","newValue","oldValue","_newValue","records","attributesChanged","proposedValues","Segment","QueryEditor","toOption","val","attributeChanged","inputMinWidth","allowCustomValue","proposedAttributes","primaries","secondaries","arcColors","primaryElements","selector","secondaryElements","arcColorElements","primaryArcColor1","secondaryArcColor1","_h","onArcColorComplementChanged","ColorPicker","onColorChanged","AggregationPeriodBuilderImpl","_build","_createClass","_seconds","_validate","_minutes","_hours","_days","_months","_years","AggregationPeriod","_isTimePartEmpty","_isEmpty","str","attach","builder","m","mn","setSeconds","setMinutes","setHours","setDays","setMonths","setYears","toUpperCase","hasSeparator","yr","parseInt","months","days","hours","minutes","seconds","build","DistanceType","TsAggregationEditor","onAggregationMethodChanged","onAggregationPeriodChanged","aggrMethod1","period","deserialize","elements","MultiSelect","AGGREGATION_METHODS","methodsChanged","years","_val$currentTarget","_val$currentTarget$va","periodChanged","_val$currentTarget2","_val$currentTarget2$v","_val$currentTarget3","_val$currentTarget3$v","_val$currentTarget4","_val$currentTarget4$v","_val$currentTarget5","_val$currentTarget5$v","_val$currentTarget6","_val$currentTarget6$v","_InlineFormLabel8","description","GeoParamsEditor","vals","buildGeorel","newType","onGeoChanged","MAX_DISTANCE","newDistanceType","newDistance","coords","georelType","georelFilter","GEOREL_OPTIONS","georelChanged","nearTypeFilters","_React$Fragment","isMinDistance","distance","parseFloat","_evt$currentTarget","distanceChanged","DISTANCE_OPTIONS","MIN_DISTANCE","distanceTypeChanged","geo","geometryChanged","GEOMETRY_OPTIONS","_evt$currentTarget2","_evt$currentTarget2$v","coordinatesChanged","geopropertyChanged","GEOPROPERTY_OPTIONS","oldGeorel","_oldGeorel$substring","lastEq","distType","firstSem","assign","_event$value","EMPTY_OPTION_ID","loadEntities","_event$value2","_e$value","_event$value3","_event$value4","loadAttributes","_event$value5","q","_event$value6","primaryOrSecondary","_this$props13","_this$props14","aggrPeriod","_this$props15","serialize","_this$props16","loadData","prom1","_type$typeName","typeName","shortName","setState","prom2","attributeList","prom3","_","_loadEntities","limit","_this$state","_this$state2","_this$state3","entitiesByType","attributesById","attributesForEntity","newAttributesByIds","state","entityIdsByType","attributesByEntityId","fromEntries","_loadAttributes","_this$state4","_this$state5","attrs","attrsByEntity","_x6","_this$state6","sort","EMPTY_OPTION","_this$state7","_this$state8","maxLength","reduce","a2","cnt","outer","arrIdx","addEmpty","attribs","getAttributesInternal","getAttributes","nameIdx","nameSelection","_this$state11","_this$state13","_this$state9","_this$state9$attribut","_this$state10","_this$state12","_this$state12$types","x","attributeNames","_this4","queryType0","queryTypeForValue","namePattern0","entityName0","namePatternSelector","NAMING_PATTERNS","onNamePatternChange","entityNameFieldSelector","_React$Fragment2","onEntityNameFieldChange","getEntityNameFields","graphEditor","_React$Fragment3","onGraphAttributesChanged","onGraphColorChanged","temporalAggregationEditor","_React$Fragment4","geoEditor","style","display","columnGap","rowGap","flexWrap","QUERY_TYPES","onQueryTypeChange","onEntityTypeChange","getEntityTypes","onEntityIdChange","getEntityIds","onAttributeChange","onCustomQueryChange","onScopeQueryChange","_InlineFormLabel9","TEMPORAL_PROPERTIES","onTemporalPropertyChange","_QueryEditor","plugin","DataSourcePlugin","setConfigEditor","setQueryEditor"],"sourceRoot":""}